{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///client/app/app-routing.module.ts","webpack:///client/app/app.component.ts","webpack:///client/app/app.component.html","webpack:///client/app/app.module.ts","webpack:///client/app/forums/forums-create/forums-create.component.ts","webpack:///client/app/forums/forums-create/forums-create.component.html","webpack:///client/app/forums/forums-update/forums-update.component.ts","webpack:///client/app/forums/forums-update/forums-update.component.html","webpack:///client/app/forums/forums.component.ts","webpack:///client/app/forums/forums.component.html","webpack:///client/app/guards/auth.guard.ts","webpack:///client/app/meet-place/meet-place-create/meet-place-create.component.ts","webpack:///client/app/meet-place/meet-place-create/meet-place-create.component.html","webpack:///client/app/meet-place/meet-place-update/meet-place-update.component.ts","webpack:///client/app/meet-place/meet-place-update/meet-place-update.component.html","webpack:///client/app/meet-place/meet-place.component.ts","webpack:///client/app/meet-place/meet-place.component.html","webpack:///client/app/my-zone/my-zone.component.ts","webpack:///client/app/my-zone/my-zone.component.html","webpack:///client/app/navbar/navbar.component.ts","webpack:///client/app/navbar/navbar.component.html","webpack:///client/app/pages/home-page/home-page.component.ts","webpack:///client/app/pages/home-page/home-page.component.html","webpack:///client/app/pages/login-page/login-page.component.ts","webpack:///client/app/pages/login-page/login-page.component.html","webpack:///client/app/pages/register-page/register-page.component.ts","webpack:///client/app/pages/register-page/register-page.component.html","webpack:///client/app/posts/posts-create/posts-create.component.ts","webpack:///client/app/posts/posts-create/posts-create.component.html","webpack:///client/app/posts/posts-update/posts-update.component.ts","webpack:///client/app/posts/posts-update/posts-update.component.html","webpack:///client/app/posts/posts.component.ts","webpack:///client/app/posts/posts.component.html","webpack:///client/app/services/auth.service.ts","webpack:///client/app/services/forum.service.ts","webpack:///client/app/services/meet-place.service.ts","webpack:///client/app/services/posts.service.ts","webpack:///client/app/statistics/discrete-bar-chart/discrete-bar-chart.component.ts","webpack:///client/app/statistics/discrete-bar-chart/discrete-bar-chart.component.html","webpack:///client/app/statistics/pie-chart/pie-chart.component.ts","webpack:///client/app/statistics/pie-chart/pie-chart.component.html","webpack:///client/app/statistics/statistics.component.ts","webpack:///client/app/statistics/statistics.component.html","webpack:///client/app/users/users.component.ts","webpack:///client/app/users/users.component.html","webpack:///client/environments/environment.ts","webpack:///client/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","declarations","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","apiKey","providers","bootstrap","ForumsCreateComponent","auth","forumSer","router","route","forum","forumName","forumId","returnURL","snapshot","queryParams","createForum","subscribe","data","localStorage","setItem","JSON","stringify","navigateByUrl","ForumsUpdateComponent","parse","console","log","editForum","deactivateForum","NumOfPosts","ForumsComponent","postsSer","numOfRows","groupByForumIdAndCount","getAllForums","forums","forEach","numOfPosts","getNumOfPosts","addRow","numTimesWatched","currentRow","document","getElementById","addEventListener","table","rows","cells","innerText","forumNumTimesWatched","activeForum","parseInt","setActiveForum","navigate","incNumTimesWatched","currentForumId","numOfPostsArr","i","length","_id","forumsName","numberOfPosts","newRow","insertRow","newCell_0","insertCell","newCell_1","newCell_2","newCell_3","newCell_4","editBtnId","activateBtnId","isEnabled","isUserAdmin","newCell_innerHtml","innerHTML","AuthGuard","next","state","returnUrl","url","providedIn","MeetPlaceCreateComponent","meetPlaceSer","meetPlace","meetPlaceName","meetPlaceType","meetPlaceLocation","createMeetPlace","MeetPlaceUpdateComponent","meetPlacesSer","editMeetPlace","deactivateMeetPlace","Position","latitude","longitude","MeetPlaceComponent","http","positions","errorMessage","showSearchForm","drawTable","getPositions","getAllMeetPlaces","get","encodeURI","push","activeMeetPlace","setActiveMeetPlace","searchMeetPlace","deleteTable","deleteRow","event","coords","lat","lng","MyZoneComponent","myDetails","myEmail","getUserEmail","myFullName","getUserFullName","myProfession","getUserProfession","myCity","getUserCity","NavbarComponent","primaryDisplayBorderTitle","primaryDisplayBorderContent","showHomePageEmitter","showForumsEmitter","showMyZoneEmitter","HomePageComponent","LoginPageComponent","credentials","email","pwd","login","RegisterPageComponent","fullName","city","profession","initCredentialsToNull","includes","register","PostsCreateComponent","post","postTitle","postId","postSubject","postLocation","postParticipants","Array","getActiveForum","withSuggestion","initPostLocationSelect","getAllPosts","posts","currentUser","favoriteLocations","favoriteLocationsCountPerUser","participant","index","indexOf","max","select","options","selectedIndex","value","createPost","sendPostToFacebook","newOption","add","Option","PostsUpdateComponent","postSer","getActivePost","editPost","deactivatePost","PostsComponent","self","isCurrentForumExists","currentForumName","searchPost","getAllPostsByForumId","turnStringToArrayAndAddUser","authSer","that","postParticipantsAsString","activePost","setActivePost","newUser","getPostById","participants","join","deletePost","array","split","newCell_5","newCell_6","joinBtnId","deleteBtnId","Users","AuthService","password","userEmail","logout","isLoggedIn","Forum","ForumService","generateId","Math","random","toString","substr","MeetPlace","MeetPlaceService","query","Post","PostsService","facebookPageAccessToken","facebookPageId","newPostString","message","DiscreteBarChartComponent","key","values","isDataLoaded","chart","type","height","margin","top","right","bottom","left","x","d","label","y","showValues","valueFormat","d3","format","duration","xAxis","axisLabel","yAxis","axisLabelDistance","groupByPostLocationAndCount","PieChartComponent","showLabels","labelThreshold","labelSunbeamLayout","legend","groupByForumNameAndCount","StatisticsComponent","UsersComponent","usersArray","getAllUsers","user","userName","userCity","UserProfession","environment","production","bootstrapModule","catch","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAsBA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADqB,EAErB;AAAED,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KAFqB,EAGrB;AAAED,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE;AAA/B,KAHqB,EAIrB;AAAED,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE,wEAA7B;AAA8CC,iBAAW,EAAE,CAAC,6DAAD;AAA3D,KAJqB,EAKrB;AAAEF,UAAI,EAAE,eAAR;AAAyBC,eAAS,EAAE,oGAApC;AAA2DC,iBAAW,EAAE,CAAC,6DAAD;AAAxE,KALqB,EAMrB;AAAEF,UAAI,EAAE,eAAR;AAAyBC,eAAS,EAAE,oGAApC;AAA2DC,iBAAW,EAAE,CAAC,6DAAD;AAAxE,KANqB,EAOrB;AAAEF,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE,qEAA5B;AAA4CC,iBAAW,EAAE,CAAC,6DAAD;AAAzD,KAPqB,EAQrB;AAAEF,UAAI,EAAE,cAAR;AAAwBC,eAAS,EAAE,gGAAnC;AAAyDC,iBAAW,EAAE,CAAC,6DAAD;AAAtE,KARqB,EASrB;AAAEF,UAAI,EAAE,cAAR;AAAwBC,eAAS,EAAE,gGAAnC;AAAyDC,iBAAW,EAAE,CAAC,6DAAD;AAAtE,KATqB,EAUrB;AAAEF,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE,0EAA7B;AAA8CC,iBAAW,EAAE,CAAC,6DAAD;AAA3D,KAVqB,EAWrB;AAAEF,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE,qEAA5B;AAA4CC,iBAAW,EAAE,CAAC,6DAAD;AAAzD,KAXqB,EAYrB;AAAEF,UAAI,EAAE,YAAR;AAAsBC,eAAS,EAAE,qFAAjC;AAAsDC,iBAAW,EAAE,CAAC,6DAAD;AAAnE,KAZqB,EAarB;AAAEF,UAAI,EAAE,YAAR;AAAsBC,eAAS,EAAE,oFAAjC;AAAqDC,iBAAW,EAAE,CAAC,6DAAD;AAAlE,KAbqB,EAcrB;AAAEF,UAAI,EAAE,mBAAR;AAA6BC,eAAS,EAAE,mHAAxC;AAAkEC,iBAAW,EAAE,CAAC,6DAAD;AAA/E,KAdqB,EAerB;AAAEF,UAAI,EAAE,mBAAR;AAA6BC,eAAS,EAAE,mHAAxC;AAAkEC,iBAAW,EAAE,CAAC,6DAAD;AAA/E,KAfqB,CAAvB;;QAyBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBALlB,CACP,4DADO,EACO,6DAAaC,OAAb,CAAqBL,MAArB,CADP,CAKkB,EAFhB,4DAEgB;;;;0HAAhBI,gB,EAAgB;AAAA,kBAJzB,4DAIyB,EAJX,4DAIW;AAJX,kBAEL,4DAFK;AAIW,O;AAFJ,K;;;;;sEAEZA,gB,EAAgB;cAP5B,sDAO4B;eAPnB;AACRE,sBAAY,EAAE,EADN;AAERC,iBAAO,EAAE,CACP,4DADO,EACO,6DAAaF,OAAb,CAAqBL,MAArB,CADP,CAFD;AAKRF,iBAAO,EAAE,CAAE,4DAAF;AALD,S;AAOmB,Q;;;;;;;;;;;;;;;;;;AC/C7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaU,Y;;;AACX,8BAAc;AAAA;AACb;;;;mCACO,CACP;;;;;;;uBAJUA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;AACE;;AACE;;AACA;;AACF;;AACF;;;;;;;;;sEDEaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;AEPzkEaC,S;;;;;YAAAA,S;AAAS,kBAHR,2DAGQ;;;;yBAATA,S;AAAS,O;AAAA,iBAJT,E;AAAE,gBAVJ,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,qEAJO,EAKP,mDALO,EAMP,yDAAcP,OAAd,CAAsB;AACpBQ,cAAM,EAAE;AADY,OAAtB,CANO,CAUI;;;;0HAIFD,S,EAAS;AAAA,uBAlClB,2DAkCkB,EAjClB,wEAiCkB,EAhClB,wEAgCkB,EA/BlB,2EA+BkB,EA9BlB,uFA8BkB,EA7BlB,0FA6BkB,EA5BlB,sEA4BkB,EA3BlB,mGA2BkB,EA1BlB,sEA0BkB,EAzBlB,qFAyBkB,EAxBlB,oGAwBkB,EAvBlB,oGAuBkB,EAtBlB,gGAsBkB,EArBlB,gGAqBkB,EApBlB,oFAoBkB,EAnBlB,mHAmBkB,EAlBlB,mHAkBkB,EAjBlB,4FAiBkB,EAhBlB,sHAgBkB;AAhBO,kBAGzB,uEAHyB,EAIzB,qEAJyB,EAKzB,0DALyB,EAMzB,qEANyB,EAOzB,mDAPyB,EAOf,wDAPe;AAgBP,O;AATR,K;;;;;sEASDA,S,EAAS;cApCrB,sDAoCqB;eApCZ;AACRN,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,wEAHY,EAIZ,2EAJY,EAKZ,uFALY,EAMZ,0FANY,EAOZ,sEAPY,EAQZ,mGARY,EASZ,sEATY,EAUZ,qFAVY,EAWZ,oGAXY,EAYZ,oGAZY,EAaZ,gGAbY,EAcZ,gGAdY,EAeZ,oFAfY,EAgBZ,mHAhBY,EAiBZ,mHAjBY,EAkBZ,4FAlBY,EAmBZ,sHAnBY,CADN;AAsBRC,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,0DAHO,EAIP,qEAJO,EAKP,mDALO,EAMP,yDAAcF,OAAd,CAAsB;AACpBQ,kBAAM,EAAE;AADY,WAAtB,CANO,CAtBD;AAgCRC,mBAAS,EAAE,EAhCH;AAiCRC,mBAAS,EAAE,CAAC,2DAAD;AAjCH,S;AAoCY,Q;;;;;;;;;;;;;;;;;;AClEtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACE;;AAAoC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AACE;;AAAI;;AAAS;;AACf;;AACA;;AACE;;AAAO;;AAAU;;AACjB;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAAzD;;AACF;;AACA;;AACA;;AAAwC;;AAAM;;AAC9C;;AACA;;AAA+C;;AAAM;;AACvD;;AACF;;;;;;AAP+D;;AAAA;;;;;;;;;;;;;AAQ/D;;AACE;;AACA;;AAAsE;;AAAe;;AACvF;;;;AADyB;;AAAA;;;;;;AAEzB;;AACE;;AACA;;AAAsE;;AAAsB;;AAC9F;;;;AADyB;;AAAA;;;;QDXZC,qB;;;AAMX,qCAAmBC,IAAnB,EAA6CC,QAA7C,EAA6EC,MAA7E,EAAqGC,KAArG,EAA4H;AAAA;;AAAzG,aAAAH,IAAA,GAAAA,IAAA;AAA0B,aAAAC,QAAA,GAAAA,QAAA;AAAgC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AALrG,aAAAC,KAAA,GAAa;AACXC,mBAAS,EAAE,EADA;AAEXC,iBAAO,EAAE;AAFE,SAAb;AAK+H;;;;mCAEvH;AACN,eAAKC,SAAL,GAAiB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,SAAjE;AACD;;;sCAEa;AAAA;;AACZ,eAAKR,QAAL,CAAcS,WAAd,CAA0B,KAAKN,KAAL,CAAWC,SAArC,EAAgDM,SAAhD,CAA0D,UAAAC,IAAI,EAAG;AAC/D,gBAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoB,KAAxB,EAA+B;AAC7B;AACA,mBAAI,CAACR,KAAL,CAAWC,SAAX,GAAuB,EAAvB;AACD,aAHD,MAGO;AACL;AACA;AACA;AACAQ,0BAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAArC,EAJK,CAKL;;AACA,mBAAI,CAACV,MAAL,CAAYe,aAAZ,CAA0B,KAAI,CAACV,SAA/B;AACD;AACF,WAZD;AAaD;;;;;;;uBA1BUR,qB,EAAqB,mI,EAAA,qI,EAAA,uH,EAAA,+H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,+Z;AAAA;AAAA;ACVlC;;AAeA;;AAIA;;;;AAnB4B;;AAevB;;AAAA;;AAIA;;AAAA;;;;;;;;;sEDTQA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTP,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACE;;AAAoC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AACE;;AAAI;;AAAU;;AAChB;;AACA;;AACE;;AAAO;;AAAU;;AACjB;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAAzD;;AACF;;AACA;;AACE;;AAAO;;AAAQ;;AACf;;AAAuD;AAAA;;AAAA;;AAAA;AAAA;;AAAvD;;AACF;;AACA;;AACA;;AAAwC;;AAAM;;AAAU;;AACxD;;AAA+C;;AAAM;;AACvD;;AACF;;;;;;AAV+D;;AAAA;;AAIF;;AAAA;;;;;;;;;;;;;AAO7D;;AACE;;AACA;;AAAsE;;AAAe;;AACvF;;;;AADyB;;AAAA;;;;;;AAEzB;;AACE;;AACA;;AAAsE;;AAAuC;;AAC/G;;;;AADyB;;AAAA;;;;QDdZwB,qB;;;AAMX,qCAAmBlB,IAAnB,EAA6CC,QAA7C,EAA6EC,MAA7E,EAAqGC,KAArG,EAA4H;AAAA;;AAAzG,aAAAH,IAAA,GAAAA,IAAA;AAA0B,aAAAC,QAAA,GAAAA,QAAA;AAAgC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AALrG,aAAAC,KAAA,GAAa;AACXC,mBAAS,EAAE,EADA;AAEXC,iBAAO,EAAE;AAFE,SAAb;AAK+H;;;;mCAEvH;AACN,eAAKC,SAAL,GAAiB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,SAAjE;AACA,eAAKL,KAAL,CAAWC,SAAX,GAAuBU,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,cAAD,CAAvB,EAAyC,WAAzC,CAAvB;AACAO,iBAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,SAAvB;AACA,eAAKD,KAAL,CAAWE,OAAX,GAAqBS,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,cAAD,CAAvB,EAAyC,SAAzC,CAArB;AACAO,iBAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,OAAvB;AACD;;;oCAEW;AAAA;;AACV,eAAKL,QAAL,CAAcqB,SAAd,CAAwB,KAAKlB,KAAL,CAAWC,SAAnC,EAA8C,KAAKD,KAAL,CAAWE,OAAzD,EAAkEK,SAAlE,CAA4E,UAAAC,IAAI,EAAG;AACjF,gBAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoB,KAAxB,EAA+B;AAC7B;AACA,oBAAI,CAACR,KAAL,CAAWC,SAAX,GAAuB,EAAvB;;AACA,oBAAI,CAACJ,QAAL,CAAcsB,eAAd;AACD,aAJD,MAIO;AACL;AACA;AACA;AACAH,qBAAO,CAACC,GAAR,CAAY,0BAA2BN,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvC;;AACA,oBAAI,CAACX,QAAL,CAAcsB,eAAd,GALK,CAML;;;AACA,oBAAI,CAACrB,MAAL,CAAYe,aAAZ,CAA0B,MAAI,CAACV,SAA/B;AACD;AACF,WAdD;AAeD;;;;;;;uBAhCUW,qB,EAAqB,mI,EAAA,qI,EAAA,uH,EAAA,+H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,shB;AAAA;AAAA;ACVlC;;AAkBA;;AAIA;;;;AAtB4B;;AAkBvB;;AAAA;;AAIA;;AAAA;;;;;;;;;sEDZQA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT1B,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAA4G;;AAAU;;;;;;;;;;;;AADxH;;AACE;;AACA;;AAAK;;AACL;;AACE;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACA;;AAEF;;AACF;;;;;;AA1BiC;;AACiD;;AAAA;;;;;;;;;;;;;AA0BlF;;AACE;;AACA;;AAAsE;;AAAe;;AACvF;;;;AADyB;;AAAA;;;;QDvBnB8B,U;;;;QAWOC,e;;;AAGX,+BAAmBzB,IAAnB,EAA6CC,QAA7C,EAA4EyB,QAA5E,EAA4GxB,MAA5G,EAAoIC,KAApI,EAA2J;AAAA;;AAAxI,aAAAH,IAAA,GAAAA,IAAA;AAA0B,aAAAC,QAAA,GAAAA,QAAA;AAA+B,aAAAyB,QAAA,GAAAA,QAAA;AAAgC,aAAAxB,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAA0B;;;;mCACtJ;AAAA;;AACN,eAAKwB,SAAL,GAAiB,CAAjB;AACA,eAAKpB,SAAL,GAAiB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,GAAjE;AACA,eAAKiB,QAAL,CAAcE,sBAAd,GAAuCjB,SAAvC,CAAiD,UAAAC,IAAI,EAAG;AACtD,kBAAI,CAACX,QAAL,CAAc4B,YAAd,GAA6BlB,SAA7B,CAAuC,UAAAmB,MAAM,EAAG;AAC9CA,oBAAM,CAACC,OAAP,CAAe,UAAA3B,KAAK,EAAI;AACtBgB,uBAAO,CAACC,GAAR,CAAYT,IAAZ;;AACA,oBAAIoB,UAAU,GAAG,MAAI,CAACC,aAAL,CAAmB7B,KAAK,CAACE,OAAzB,EAAkCM,IAAlC,CAAjB;;AACA,sBAAI,CAACsB,MAAL,CAAY9B,KAAK,CAACC,SAAlB,EAA6BD,KAAK,CAACE,OAAnC,EAA4C0B,UAA5C,EAAwD5B,KAAK,CAAC+B,eAA9D;;AACA,oBAAIC,UAAU,GAAG,MAAI,CAACT,SAAtB;AACA,oBAAIzB,MAAM,GAAG,MAAI,CAACA,MAAlB;AACA,oBAAID,QAAQ,GAAG,MAAI,CAACA,QAApB,CANsB,CAOtB;;AACAoC,wBAAQ,CAACC,cAAT,CAAwB,aAAaF,UAArC,EAAiDG,gBAAjD,CAAkE,OAAlE,EAA2E;AACzE,sBAAIC,KAAK,GAAwCH,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAjD;AACA,sBAAIG,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,sBAAInC,OAAO,GAAGmC,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAAxC;AACAvB,yBAAO,CAACC,GAAR,CAAYf,OAAZ;AACA,sBAAID,SAAS,GAAGoC,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAA1C;AACAvB,yBAAO,CAACC,GAAR,CAAYhB,SAAZ;AACA,sBAAIuC,oBAAoB,GAAGH,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAArD;AACAvB,yBAAO,CAACC,GAAR,CAAYuB,oBAAZ;AAEA,sBAAIC,WAAW,GAAG;AAChBxC,6BAAS,EAAEA,SADK;AAEhBC,2BAAO,EAAEA,OAFO;AAGhB6B,mCAAe,EAAEW,QAAQ,CAACF,oBAAD;AAHT,mBAAlB;AAMAxB,yBAAO,CAACC,GAAR,CAAYN,IAAI,CAACC,SAAL,CAAe6B,WAAf,CAAZ;AACA5C,0BAAQ,CAAC8C,cAAT,CAAwBF,WAAxB;AACA3C,wBAAM,CAAC8C,QAAP,CAAgB,CAAC,gBAAD,CAAhB;AACD,iBAnBD,EARsB,CA6BtB;;AACAX,wBAAQ,CAACC,cAAT,CAAwB,iBAAiBF,UAAzC,EAAqDG,gBAArD,CAAsE,OAAtE,EAA+E;AAC7E,sBAAIC,KAAK,GAAwCH,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAjD;AACA,sBAAIG,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,sBAAInC,OAAO,GAAGmC,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAAxC;AACAvB,yBAAO,CAACC,GAAR,CAAYf,OAAZ;AACA,sBAAID,SAAS,GAAGoC,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAA1C;AACAvB,yBAAO,CAACC,GAAR,CAAYhB,SAAZ;AACA,sBAAIuC,oBAAoB,GAAGH,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAArD;AACAvB,yBAAO,CAACC,GAAR,CAAYuB,oBAAZ;AAEA,sBAAIC,WAAW,GAAG;AAChBxC,6BAAS,EAAEA,SADK;AAEhBC,2BAAO,EAAEA,OAFO;AAGhB6B,mCAAe,EAAEW,QAAQ,CAACF,oBAAD;AAHT,mBAAlB;AAMAxB,yBAAO,CAACC,GAAR,CAAYN,IAAI,CAACC,SAAL,CAAe6B,WAAf,CAAZ;AACA5C,0BAAQ,CAAC8C,cAAT,CAAwBF,WAAxB;AACA5C,0BAAQ,CAACgD,kBAAT,CAA4B3C,OAA5B,EAAqCD,SAArC,EAAgDM,SAAhD,CAA0D,UAAAC,IAAI,EAAG;AAC/D,wBAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoB,IAAxB,EAA8B;AAC5BQ,6BAAO,CAACC,GAAR,CAAY,aAAZ;AACA,0BAAIc,eAAe,GAAGvB,IAAI,CAAC,iBAAD,CAA1B;AACD,qBAHD,MAIK;AACHQ,6BAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AACF,mBARD;AASAnB,wBAAM,CAAC8C,QAAP,CAAgB,CAAC,QAAD,CAAhB;AACD,iBA5BD;AA6BA,sBAAI,CAACrB,SAAL,IAAkB,CAAlB;AACD,eA5DD;AA6DD,aA9DD;AA+DD,WAhED;AAiED;;;sCAEauB,c,EAAwBC,a,EAA6B;AACjE,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACD,aAAa,CAACE,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,gBAAID,aAAa,CAACC,CAAD,CAAb,CAAiBE,GAAjB,KAAyBJ,cAA7B,EAA6C;AAC3C,qBAAOC,aAAa,CAACC,CAAD,CAAb,CAAiBpB,UAAxB;AACD;AACF;;AAED,iBAAO,CAAP;AACD;;;+BAEMuB,U,EAAYjD,O,EAASkD,a,EAAerB,e,EAAiB;AAC1D,cAAIK,KAAK,GAAwCH,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAjD;AACA,cAAImB,MAAM,GAAGjB,KAAK,CAACkB,SAAN,CAAgB,KAAK/B,SAArB,CAAb;AAEA,cAAIgC,SAAS,GAAGF,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIC,SAAS,GAAGJ,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIE,SAAS,GAAGL,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIG,SAAS,GAAGN,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAII,SAAS,GAAGP,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AAEAD,mBAAS,CAAChB,SAAV,GAAsBY,UAAtB;AACAM,mBAAS,CAAClB,SAAV,GAAsBrC,OAAtB;AACAwD,mBAAS,CAACnB,SAAV,GAAsBa,aAAtB;AACAO,mBAAS,CAACpB,SAAV,GAAsBR,eAAtB;AAEA,cAAI8B,SAAS,GAAG,aAAa,KAAKtC,SAAlC;AACA,cAAIuC,aAAa,GAAG,iBAAiB,KAAKvC,SAA1C;AAEA,cAAIwC,SAAS,GAAG,KAAKnE,IAAL,CAAUoE,WAAV,EAAhB;;AACA,cAAID,SAAJ,EAAe;AACb,gBAAIE,iBAAiB,GAAG,wCAAwCJ,SAAxC,GAAoD,yBAApD,GACtB,qCADsB,GACkBC,aADlB,GACkC,yBAD1D;AAED,WAHD,MAIK;AACH,gBAAIG,iBAAiB,GAAG,wCAAwCJ,SAAxC,GAAoD,kCAApD,GACtB,qCADsB,GACkBC,aADlB,GACkC,yBAD1D;AAED;;AACDF,mBAAS,CAACM,SAAV,GAAsBD,iBAAtB;AAED;;;;;;;uBAjHU5C,e,EAAe,mI,EAAA,qI,EAAA,qI,EAAA,uH,EAAA,+H;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,ke;AAAA;AAAA;ACjB5B;;AA2BA;;;;AA3BmE;;AA2B9D;;AAAA;;;;;;;;;sEDVQA,e,EAAe;cAN3B,uDAM2B;eANjB;AACTjC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAMiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa6E,S;;;AACX,yBAAoBrE,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AACnB;;;;oCAECsE,I,EACAC,K,EAA0B;AAC1B;AACA;AACA,cAAI5D,YAAY,CAAC,YAAD,CAAhB,EAAgC;AAC9B;AACA,mBAAO,IAAP;AACD,WAHD,MAGO;AACL;AACA;AACA;AACA;AACA,iBAAKX,MAAL,CAAY8C,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAACvC,yBAAW,EAAE;AAAEiE,yBAAS,EAAED,KAAK,CAACE;AAAnB;AAAd,aAAjC;AACA,mBAAO,KAAP;AACD;AACF;;;;;;;uBAnBUJ,S,EAAS,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVK,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;ACPtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACE;;AAAoC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AACE;;AAAI;;AAAc;;AACpB;;AACA;;AACE;;AAAO;;AAAe;;AACtB;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAA7D;;AACF;;AACA;;AACE;;AAAO;;AAAe;;AACtB;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAA7D;;AACF;;AACA;;AACE;;AAAO;;AAAmB;;AAC1B;;AAAiE;AAAA;;AAAA;;AAAA;AAAA;;AAAjE;;AACF;;AACA;;AACA;;AAAwC;;AAAM;;AAC9C;;AACA;;AAAmD;;AAAM;;AAC3D;;AACF;;;;;;AAfmE;;AAAA;;AAIA;;AAAA;;AAII;;AAAA;;;;;;;;;;;;;AAQvE;;AACE;;AACA;;AAAsE;;AAAe;;AACvF;;;;AADyB;;AAAA;;;;QDdZC,wB;;;AAOX,wCAAmB7E,IAAnB,EAA6C8E,YAA7C,EAAqF5E,MAArF,EAA6GC,KAA7G,EAAoI;AAAA;;AAAjH,aAAAH,IAAA,GAAAA,IAAA;AAA0B,aAAA8E,YAAA,GAAAA,YAAA;AAAwC,aAAA5E,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAN7G,aAAA4E,SAAA,GAAiB;AACfC,uBAAa,EAAE,EADA;AAEfC,uBAAa,EAAE,EAFA;AAGfC,2BAAiB,EAAE;AAHJ,SAAjB;AAMuI;;;;mCAE/H;AACN,eAAK3E,SAAL,GAAiB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,aAAjE;AACD;;;0CAEiB;AAAA;;AAChB,eAAKqE,YAAL,CAAkBK,eAAlB,CAAkC,KAAKJ,SAAL,CAAeC,aAAjD,EAAgE,KAAKD,SAAL,CAAeE,aAA/E,EAA8F,KAAKF,SAAL,CAAeG,iBAA7G,EAAgIvE,SAAhI,CAA0I,UAAAC,IAAI,EAAI;AAChJ,gBAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoB,KAAxB,EAA+B;AAC7B;AACA,oBAAI,CAACmE,SAAL,CAAeC,aAAf,GAA+B,EAA/B;AACA,oBAAI,CAACD,SAAL,CAAeE,aAAf,GAA+B,EAA/B;AACA,oBAAI,CAACF,SAAL,CAAeG,iBAAf,GAAmC,EAAnC;AACD,aALD,MAKO;AACLrE,0BAAY,CAACC,OAAb,CAAqB,kBAArB,EAAyCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAzC,EADK,CAEL;;AACA,oBAAI,CAACV,MAAL,CAAYe,aAAZ,CAA0B,MAAI,CAACV,SAA/B;AACD;AACF,WAXD;AAYD;;;;;;;uBA1BUsE,wB,EAAwB,mI,EAAA,8I,EAAA,uH,EAAA,+H;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA,c;AAAA,a;AAAA,qoB;AAAA;AAAA;ACXrC;;AAuBA;;;;AAvB4B;;AAuBvB;;AAAA;;;;;;;;;sEDZQA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTrF,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACE;;AAAoC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AACE;;AAAI;;AAAe;;AACrB;;AACA;;AACE;;AAAO;;AAAe;;AACtB;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAA7D;;AACF;;AACA;;AACE;;AAAO;;AAAe;;AACtB;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAA7D;;AACF;;AACA;;AACE;;AAAO;;AAAmB;;AAC1B;;AAAiE;AAAA;;AAAA;;AAAA;AAAA;;AAAjE;;AACF;;AACA;;AACA;;AAAwC;;AAAM;;AAAU;;AACxD;;AAAmD;;AAAM;;AAC3D;;AACF;;;;;;AAdmE;;AAAA;;AAIA;;AAAA;;AAII;;AAAA;;;;;;;;;;;;;AAOvE;;AACE;;AACA;;AAAsE;;AAAe;;AACvF;;;;AADyB;;AAAA;;;;QDbZ0F,wB;;;AAOX,wCAAmBpF,IAAnB,EAA6CqF,aAA7C,EAAsFnF,MAAtF,EAA8GC,KAA9G,EAAqI;AAAA;;AAAlH,aAAAH,IAAA,GAAAA,IAAA;AAA0B,aAAAqF,aAAA,GAAAA,aAAA;AAAyC,aAAAnF,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAN9G,aAAA4E,SAAA,GAAiB;AACfC,uBAAa,EAAE,EADA;AAEfC,uBAAa,EAAE,EAFA;AAGfC,2BAAiB,EAAE;AAHJ,SAAjB;AAMwI;;;;mCAEhI;AACN,eAAK3E,SAAL,GAAiB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,aAAjE;AACA,eAAKsE,SAAL,CAAeC,aAAf,GAA+BjE,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,kBAAD,CAAvB,EAA6C,eAA7C,CAA/B;AACAO,iBAAO,CAACC,GAAR,CAAY,KAAK0D,SAAL,CAAeC,aAA3B;AACA,eAAKD,SAAL,CAAeE,aAAf,GAA+BlE,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,kBAAD,CAAvB,EAA6C,eAA7C,CAA/B;AACAO,iBAAO,CAACC,GAAR,CAAY,KAAK0D,SAAL,CAAeE,aAA3B;AACA,eAAKF,SAAL,CAAeG,iBAAf,GAAmCnE,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,kBAAD,CAAvB,EAA6C,mBAA7C,CAAnC;AACAO,iBAAO,CAACC,GAAR,CAAY,KAAK0D,SAAL,CAAeG,iBAA3B;AACD;;;wCAEe;AAAA;;AACd,eAAKG,aAAL,CAAmBC,aAAnB,CAAiC,KAAKP,SAAL,CAAeC,aAAhD,EAA+D,KAAKD,SAAL,CAAeE,aAA9E,EAA6F,KAAKF,SAAL,CAAeG,iBAA5G,EAA+HvE,SAA/H,CAAyI,UAAAC,IAAI,EAAG;AAC9I,gBAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoB,KAAxB,EAA+B;AAC7B;AACA,oBAAI,CAACmE,SAAL,CAAeC,aAAf,GAA+B,EAA/B;AACA,oBAAI,CAACD,SAAL,CAAeE,aAAf,GAA+B,EAA/B;AACA,oBAAI,CAACF,SAAL,CAAeG,iBAAf,GAAmC,EAAnC;;AACA,oBAAI,CAACH,SAAL,CAAexD,eAAf;AACD,aAND,MAOK;AACH,oBAAI,CAAC8D,aAAL,CAAmBE,mBAAnB,GADG,CAEH;;;AACA,oBAAI,CAACrF,MAAL,CAAYe,aAAZ,CAA0B,MAAI,CAACV,SAA/B;AACD;AACF,WAbD;AAcD;;;;;;;uBAlCU6E,wB,EAAwB,mI,EAAA,8I,EAAA,uH,EAAA,+H;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA,c;AAAA,a;AAAA,qpB;AAAA;AAAA;ACXrC;;AAsBA;;;;AAtB4B;;AAsBvB;;AAAA;;;;;;;;;sEDXQA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT5F,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACSU;;AACE;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AACE;;AAAO;;AAAe;;AACtB;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAA7D;;AACF;;AACA;;AACE;;AAAO;;AAAe;;AACtB;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAA7D;;AACF;;AACA;;AACE;;AAAO;;AAAmB;;AAC1B;;AAAiE;AAAA;;AAAA;;AAAA;AAAA;;AAAjE;;AACF;;AACA;;AACA;;AAA+B;;AAAgB;;AAC/C;;AAA8C;;AAAM;;AACtD;;AACA;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAM;;AACjE;;;;;;AAnB4C;;AAIuB;;AAAA;;AAIA;;AAAA;;AAII;;AAAA;;AAGhE;;AAAA;;AAA4B;;AAAA;;;;;;;;;;;;;;AAvB3C;;AACE;;AACE;;AAAyF;;AAAe;;AACxG;;AAAK;;AACL;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAmB;;AAChH;;AAAK;;AACL;;AACE;;AACE;;AAoBF;;AACF;;AACA;;AAAK;;AACL;;AACE;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACA;;AAEF;;AACF;;AACF;;;;;;AAnDmC;;AAAA;;AAON;;AAAA;;;;;;AA+CzB;;;;;;AAA+C,oGAA8B,WAA9B,EAA8B,sBAA9B;;;;;;;;AAFnD;;AACE;;AAAmE;AAAA;;AAAA;;AAAA;AAAA;;AACjE;;AACF;;AACF;;;;;;AAHuB;;AAAA,+FAAqB,WAArB,EAAqB,iBAArB;;AACP;;AAAA;;;;;;;;;;;;;AAMlB;;AACE;;AACA;;AAAsE;;AAAe;;AACvF;;;;AADyB;;AAAA;;;;QDzDnB8F,Q,GAIJ,kBAAYC,QAAZ,EAAsBC,SAAtB,EAAiC;AAAA;;AAC/B,WAAKD,QAAL,GAAgBA,QAAhB;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACD,K;;QAWUC,kB;;;AAaX,kCAAmB3F,IAAnB,EAA6C8E,YAA7C,EAAqF5E,MAArF,EACqBC,KADrB,EACoDyF,IADpD,EACsE;AAAA;;AADnD,aAAA5F,IAAA,GAAAA,IAAA;AAA0B,aAAA8E,YAAA,GAAAA,YAAA;AAAwC,aAAA5E,MAAA,GAAAA,MAAA;AAChE,aAAAC,KAAA,GAAAA,KAAA;AAA+B,aAAAyF,IAAA,GAAAA,IAAA;AAb7C,aAAAC,SAAA,GAAY,CAAC,IAAIL,QAAJ,CAAa,SAAb,EAAwB,SAAxB,CAAD,CAAZ,CAa+D,CAbb;;AAEzD,aAAAT,SAAA,GAAgB;AACdC,uBAAa,EAAE,EADD;AAEdC,uBAAa,EAAE,EAFD;AAGdC,2BAAiB,EAAE;AAHL,SAAhB;AAQA,aAAAY,YAAA,GAAsB,EAAtB,CAGsE,CAoHtE;;AACA,aAAAL,QAAA,GAAU,SAAV;AACA,aAAAC,SAAA,GAAU,SAAV;AAtHyE;;;;mCAEjE;AACN,eAAKK,cAAL,GAAsB,KAAtB;AACA,eAAKpE,SAAL,GAAiB,CAAjB;AACA,eAAKpB,SAAL,GAAiB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,GAAjE;AACA,eAAKuF,SAAL;AACA,eAAKC,YAAL;AACD;;;uCAEc;AAAA;;AACb,eAAKnB,YAAL,CAAkBoB,gBAAlB,GAAqCvF,SAArC,CAA+C,UAAAC,IAAI,EAAG;AACpDA,gBAAI,CAACmB,OAAL,CAAa,UAAAgD,SAAS,EAAG;AACvB,kBAAIG,iBAAiB,GAAGH,SAAS,CAACG,iBAAlC;AACA9D,qBAAO,CAACC,GAAR,CAAY,wBAAwB6D,iBAApC;;AACA,oBAAI,CAACU,IAAL,CAAUO,GAAV,CAAc,+DAA+DC,SAAS,CAAClB,iBAAD,CAAxE,GAA6F,8CAA3G,EAA2JvE,SAA3J,CAAqK,UAAAC,IAAI,EAAE;AACzK,oBAAI6E,QAAQ,GAAG7E,IAAI,CAAC,SAAD,CAAJ,CAAgB,CAAhB,EAAmB,UAAnB,EAA+B,UAA/B,EAA2C,KAA3C,CAAf;AACA,oBAAI8E,SAAS,GAAG9E,IAAI,CAAC,SAAD,CAAJ,CAAgB,CAAhB,EAAmB,UAAnB,EAA+B,UAA/B,EAA2C,KAA3C,CAAhB;AACAQ,uBAAO,CAACC,GAAR,CAAY,kBAAkBoE,QAA9B;AACArE,uBAAO,CAACC,GAAR,CAAY,mBAAmBqE,SAA/B;;AACA,sBAAI,CAACG,SAAL,CAAeQ,IAAf,CAAoB,IAAIb,QAAJ,CAAaC,QAAb,EAAuBC,SAAvB,CAApB;AACD,eAND;AAOD,aAVD;AAWAtE,mBAAO,CAACC,GAAR,CAAY,MAAI,CAACwE,SAAjB;AACD,WAbD;AAcD;;;oCAEW;AAAA;;AACV,eAAKf,YAAL,CAAkBoB,gBAAlB,GAAqCvF,SAArC,CAA+C,UAAAC,IAAI,EAAG;AACpDA,gBAAI,CAACmB,OAAL,CAAa,UAAAgD,SAAS,EAAG;AACvB,oBAAI,CAAC7C,MAAL,CAAY6C,SAAS,CAACC,aAAtB,EAAqCD,SAAS,CAACE,aAA/C,EAA8DF,SAAS,CAACG,iBAAxE;;AACA,kBAAI9C,UAAU,GAAG,MAAI,CAACT,SAAtB;AACA,kBAAIzB,MAAM,GAAG,MAAI,CAACA,MAAlB;AACA,kBAAI4E,YAAY,GAAG,MAAI,CAACA,YAAxB,CAJuB,CAMvB;;AACAzC,sBAAQ,CAACC,cAAT,CAAwB,aAAaF,UAArC,EAAiDG,gBAAjD,CAAkE,OAAlE,EAA2E;AACzE,oBAAIC,KAAK,GAAwCH,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAjD;AACA,oBAAIG,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,oBAAIuC,aAAa,GAAGvC,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAA9C;AACAvB,uBAAO,CAACC,GAAR,CAAY2D,aAAZ;AACA,oBAAIC,aAAa,GAAGxC,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAA9C;AACAvB,uBAAO,CAACC,GAAR,CAAY4D,aAAZ;AACA,oBAAIC,iBAAiB,GAAGzC,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAAlD;AACAvB,uBAAO,CAACC,GAAR,CAAY6D,iBAAZ;AAEA,oBAAIoB,eAAe,GAAG;AACpBtB,+BAAa,EAAEA,aADK;AAEpBC,+BAAa,EAAEA,aAFK;AAGpBC,mCAAiB,EAAEA;AAHC,iBAAtB;AAMA9D,uBAAO,CAACC,GAAR,CAAYN,IAAI,CAACC,SAAL,CAAesF,eAAf,CAAZ;AACAxB,4BAAY,CAACyB,kBAAb,CAAgCD,eAAhC;AACApG,sBAAM,CAAC8C,QAAP,CAAgB,CAAC,oBAAD,CAAhB;AACD,eAnBD;AAoBA,oBAAI,CAACrB,SAAL,IAAkB,CAAlB;AACD,aA5BD;AA6BD,WA9BD;AA+BD;;;0CAEiB;AAAA;;AAChB,cAAI,KAAKoD,SAAL,CAAeC,aAAf,KAAiC,EAAjC,IAAuC,KAAKD,SAAL,CAAeE,aAAf,KAAiC,EAAxE,IAA8E,KAAKF,SAAL,CAAeG,iBAAf,KAAqC,EAAvH,EAA2H;AACzH,iBAAKY,YAAL,GAAoB,oBAApB;AACD,WAFD,MAGK;AACH,iBAAKhB,YAAL,CAAkB0B,eAAlB,CAAkC,KAAKzB,SAAL,CAAeC,aAAjD,EAAgE,KAAKD,SAAL,CAAeE,aAA/E,EAA8F,KAAKF,SAAL,CAAeG,iBAA7G,EAAgIvE,SAAhI,CAA0I,UAAAC,IAAI,EAAE;AAC9I,oBAAI,CAAC6F,WAAL;;AACA,oBAAI,CAACX,YAAL,GAAoB,EAApB;AACAlF,kBAAI,CAACmB,OAAL,CAAa,UAAAgD,SAAS,EAAG;AACvB,sBAAI,CAAC7C,MAAL,CAAY6C,SAAS,CAACC,aAAtB,EAAqCD,SAAS,CAACE,aAA/C,EAA8DF,SAAS,CAACG,iBAAxE;AACD,eAFD;AAGD,aAND;AAOD;AACF;;;6CAEoB;AACnB,eAAKa,cAAL,GAAsB,CAAC,KAAKA,cAA5B;;AACA,cAAI,KAAKA,cAAL,KAAwB,KAA5B,EAAmC;AACjC,iBAAKD,YAAL,GAAoB,EAApB;AACD;AACF;;;uCAEc;AACb,eAAKC,cAAL,GAAsB,KAAtB;AACA,eAAKD,YAAL,GAAoB,EAApB;AACA,eAAKW,WAAL;AACA,eAAKT,SAAL;AACD;;;sCAEa;AACZ,cAAIxD,KAAK,GAAwCH,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAjD;;AACA,iBAAME,KAAK,CAACC,IAAN,CAAWY,MAAX,GAAoB,CAA1B,EAA6B;AAC3Bb,iBAAK,CAACkE,SAAN,CAAgB,CAAC,CAAjB;AACD;;AACD,eAAK/E,SAAL,GAAiB,CAAjB;AACD;;;+BAEMqD,a,EAAeC,a,EAAeC,iB,EAAmB;AACtD,cAAI1C,KAAK,GAAwCH,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAjD;AACA,cAAImB,MAAM,GAAGjB,KAAK,CAACkB,SAAN,CAAgB,KAAK/B,SAArB,CAAb;AAEA,cAAIgC,SAAS,GAAGF,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIC,SAAS,GAAGJ,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIE,SAAS,GAAGL,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIG,SAAS,GAAGN,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AAEAD,mBAAS,CAAChB,SAAV,GAAsBqC,aAAtB;AACAnB,mBAAS,CAAClB,SAAV,GAAsBsC,aAAtB;AACAnB,mBAAS,CAACnB,SAAV,GAAsBuC,iBAAtB;AAEA,cAAIjB,SAAS,GAAG,aAAa,KAAKtC,SAAlC;AACA,cAAI0C,iBAAiB,GAAG,wCAAwCJ,SAAxC,GAAoD,8BAA5E;AACAF,mBAAS,CAACO,SAAV,GAAsBD,iBAAtB;AACD;;;yCAKiBsC,K,EAAK;AAErB,eAAKlB,QAAL,GAAekB,KAAK,CAACC,MAAN,CAAaC,GAA5B;AACA,eAAKnB,SAAL,GAAeiB,KAAK,CAACC,MAAN,CAAaE,GAA5B;AACD;;;;;;;uBAzIUnB,kB,EAAkB,mI,EAAA,8I,EAAA,uH,EAAA,+H,EAAA,gI;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,c;AAAA,a;AAAA,m0C;AAAA;AAAA;ACzB/B;;AACE;;AAqDA;;AAKF;;AAGA;;;;AA7DwB;;AAAA;;AAqDA;;AAAA;;AAQnB;;AAAA;;;;;;;;;sEDrCQA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTnG,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACAA;;AACE;;AAAwB;;AAAU;;AAClC;;AAAsB;;AAAsB;;AAAM;;AAAM;;AAExD;;AAAwB;;AAAc;;AACtC;;AAAsB;;AAAyB;;AAAM;;AAAM;;AAE3D;;AAAwB;;AAAe;;AACvC;;AAAsB;;AAA2B;;AAAM;;AAAM;;AAE7D;;AAAwB;;AAAS;;AACjC;;AAAsB;;AAAqB;;AAE3C;;AAEA;;AACE;;AAAG;;AAAoC;;AACzC;;AACF;;AAAG;;AAC2I;;AAE5I;;AACE;;AAAmD;;AACvD;;;;;;AAvB+B;;AAEP;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;;AAexB;;AACE;;AACA;;AAAsE;;AAAe;;AACvF;;;;AADyB;;AAAA;;;;QDpBZqH,e;;;AAOX,+BAAmB/G,IAAnB,EAAsC;AAAA;;AAAnB,aAAAA,IAAA,GAAAA,IAAA;AANnB,aAAAgH,SAAA,GAAgB;AACdC,iBAAO,EAAE,KAAKjH,IAAL,CAAUkH,YAAV,EADK;AAEdC,oBAAU,EAAE,KAAKnH,IAAL,CAAUoH,eAAV,EAFE;AAGdC,sBAAY,EAAE,KAAKrH,IAAL,CAAUsH,iBAAV,EAHA;AAIdC,gBAAM,EAAE,KAAKvH,IAAL,CAAUwH,WAAV;AAJM,SAAhB;AAMyC;;;;mCAEjC,CACP;;;;;;;uBAVUT,e,EAAe,mI;AAAA,K;;;YAAfA,e;AAAe,kC;AAAA,c;AAAA,a;AAAA,mV;AAAA;AAAA;ACR5B;;AA0BA;;;;AA1BK;;AA0BA;;AAAA;;;;;;;;;sEDlBQA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTvH,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC6BQ;;AACE;;AAAyC;;AAAM;;AACjD;;;;;;AACA;;AACE;;AAA4C;;AAAQ;;AACtD;;;;;;AACA;;AACE;;AAAyC;;AAAK;;AAChD;;;;;;;;AACA;;AACE;;AAAoB;AAAA;;AAAA;;AAAA,iBAAS,OAAAM,IAAA,SAAT;AAAsB,SAAtB;;AAAwB;;AAAO;;AACrD;;;;;;AACA;;AACE;;AACF;;;;;;AADE;;AAAA;;;;QDlCGyH,e;;;AAMX,+BAAmBzH,IAAnB,EAAsC;AAAA;;AAAnB,aAAAA,IAAA,GAAAA,IAAA;AALnB,aAAA0H,yBAAA,GAA4B,cAA5B;AACA,aAAAC,2BAAA,GAA8B,yBAA9B;AACU,aAAAC,mBAAA,GAAsB,IAAI,0DAAJ,EAAtB;AACA,aAAAC,iBAAA,GAAoB,IAAI,0DAAJ,EAApB;AACA,aAAAC,iBAAA,GAAoB,IAAI,0DAAJ,EAApB;AAC+B;;;;mCAEjC,CACP;;;;;;;uBATUL,e,EAAe,mI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,usC;AAAA;AAAA;ACR5B;;AACE;;AACE;;AACE;;AACF;;AAGA;;AAAwE;;AAA0K;;AAElP;;AACE;;AACE;;AACE;;AAAmC;;AAAI;;AACzC;;AACA;;AACE;;AAAyC;;AAAM;;AACjD;;AACA;;AACE;;AAA6C;;AAAU;;AACzD;;AACA;;AACE;;AAA6C;;AAAW;;AAC1D;;AACA;;AACE;;AAAiF;;AAAQ;;AAC3F;;AACA;;AACE;;AAAyC;;AAAM;;AACjD;;AACA;;AAGA;;AAGA;;AAGA;;AAGA;;AAGF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AACA;;AACA;;AACA;;AAAgC;;AAA6B;;AAC7D;;AAAG;;AAA+B;;AACpC;;AACF;;;;AA7B6B;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGjB;;AAAA;;AAcwB;;AAAA;;AAC7B;;AAAA;;;;;;;;;sEDhDMA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTjI,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;gBAGzB;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QAOaqI,iB;;;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,+U;AAAA;AAAA;ACP9B;;AAEA;;AACE;;AAAK;;AAAkC;;AAQnC;;AACS;;AACT;;AACL;;AAKD;;AACE;;AAAI;;AAAwE;;AAC5E;;AACA;;AAOA;;AACF;;AAGA;;AACE;;AAAM;;AAAG;;AAAuE;;AAAI;;AACtF;;AAIA;;AACE;;AACE;;AACA;;AAAG;;AAAmC;;AACtC;;AAAG;;AAAqB;;AAAqC;;AAAwB;;AAAI;;AAAC;;AAC5F;;AAGF;;;;AA7CK;;AAAA;;AASO;;AAAA;;AAQW;;AAAA;;;;;;;;;sEDZVA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTvI,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;QASasI,kB;;;AAOX,kCAAoBhI,IAApB,EAA+CE,MAA/C,EAAuEC,KAAvE,EAA8F;AAAA;;AAA1E,aAAAH,IAAA,GAAAA,IAAA;AAA2B,aAAAE,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AANvE,aAAA2F,YAAA,GAAuB,EAAvB;AACA,aAAAmC,WAAA,GAAmB;AACjBC,eAAK,EAAE,EADU;AAEjBC,aAAG,EAAE;AAFY,SAAnB;AAKiG;;;;mCAEzF;AACN,eAAK5H,SAAL,GAAiB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,GAAjE;AACD;;;gCACO;AAAA;;AACN;AACA,eAAKT,IAAL,CAAUoI,KAAV,CAAgB,KAAKH,WAAL,CAAiBC,KAAjC,EAAwC,KAAKD,WAAL,CAAiBE,GAAzD,EAA8DxH,SAA9D,CAAwE,UAAAC,IAAI,EAAI;AAC9E,gBAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoB,KAAxB,EAA+B;AAC7B;AACA,oBAAI,CAACqH,WAAL,CAAiBC,KAAjB,GAAyB,EAAzB;AACA,oBAAI,CAACD,WAAL,CAAiBE,GAAjB,GAAuB,EAAvB;AACA,oBAAI,CAACrC,YAAL,GAAoB,iCAApB;AACD,aALD,MAKO;AACL;AACA;AACA;AACAjF,0BAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAnC,EAJK,CAKL;;AACA,oBAAI,CAACV,MAAL,CAAYe,aAAZ,CAA0B,MAAI,CAACV,SAA/B;AACD;AACF,WAdD;AAeD;;;;;;;uBA7BUyH,kB,EAAkB,mI,EAAA,uH,EAAA,+H;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,a;AAAA,gZ;AAAA;AAAA;;;ACT/B;;AACE;;AAAoC;AAAA;;AAAA;;AAAA,sCAA4B,IAAAI,KAAA,EAA5B;AAAmC,WAAnC;;AAClC;;AACE;;AAAI;;AAAU;;AAChB;;AACA;;AACE;;AAAO;;AAAK;;AACZ;;AAAsD;AAAA;AAAA;;AAAtD;;AACF;;AACA;;AACE;;AAAO;;AAAQ;;AACf;;AAAuD;AAAA;AAAA;;AAAvD;;AACF;;AACA;;AACA;;AAAmD;;AAAmB;;AACtE;;AACA;;AAAwC;;AAAM;;AAChD;;AACF;;;;AAX4D;;AAAA;;AAIC;;AAAA;;AAGtD;;AAAA;;AAAgD;;AAAA;;;;;;;;;sEDL1CJ,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTxI,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AET/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;QASa2I,qB;;;AAUX,qCAAoBrI,IAApB,EAA+CE,MAA/C,EAAuEC,KAAvE,EAA8F;AAAA;;AAA1E,aAAAH,IAAA,GAAAA,IAAA;AAA2B,aAAAE,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AATvE,aAAA2F,YAAA,GAAuB,EAAvB;AACA,aAAAmC,WAAA,GAAmB;AACjBC,eAAK,EAAE,EADU;AAEjBC,aAAG,EAAE,EAFY;AAGjBG,kBAAQ,EAAE,EAHO;AAIjBC,cAAI,EAAE,EAJW;AAKjBC,oBAAU,EAAE;AALK,SAAnB;AAQiG;;;;mCAEzF;AACN,eAAKjI,SAAL,GAAiB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,GAAjE;AACD;;;mCACU;AAAA;;AACT,cAAI,KAAKwH,WAAL,CAAiBK,QAAjB,KAA8B,EAA9B,IAAoC,KAAKL,WAAL,CAAiBC,KAAjB,KAA2B,EAA/D,IAAqE,KAAKD,WAAL,CAAiBE,GAAjB,KAAyB,EAA9F,IAAoG,KAAKF,WAAL,CAAiBO,UAAjB,KAA+B,EAAnI,IAAyI,KAAKP,WAAL,CAAiBM,IAAjB,KAA0B,EAAvK,EAA2K;AACzK,iBAAKE,qBAAL;AACA,iBAAK3C,YAAL,GAAoB,6BAApB;AACD,WAHD,MAIK,IAAI,CAAC,KAAKmC,WAAL,CAAiBC,KAAjB,CAAuBQ,QAAvB,CAAgC,GAAhC,CAAL,EAA2C;AAC9C,iBAAKD,qBAAL;AACA,iBAAK3C,YAAL,GAAoB,eAApB;AACD,WAHI,MAIA;AACH,iBAAK9F,IAAL,CAAU2I,QAAV,CAAmB,KAAKV,WAAL,CAAiBC,KAApC,EAA2C,KAAKD,WAAL,CAAiBE,GAA5D,EAAiE,KAAKF,WAAL,CAAiBK,QAAlF,EAA4F,KAAKL,WAAL,CAAiBM,IAA7G,EAAmH,KAAKN,WAAL,CAAiBO,UAApI,EAAgJ7H,SAAhJ,CAA0J,UAAAC,IAAI,EAAI;AAChK,kBAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoB,KAAxB,EAA+B;AAC7B;AACA,uBAAI,CAAC6H,qBAAL;;AACA,uBAAI,CAAC3C,YAAL,GAAoB,sBAApB;AACD,eAJD,MAIO;AACL;AACA;AACA;AACAjF,4BAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAnC,EAJK,CAKL;;AACA,uBAAI,CAACV,MAAL,CAAYe,aAAZ,CAA0B,OAAI,CAACV,SAA/B;AACD;AACF,aAbD;AAcD;AAEF;;;gDAEuB;AACtB,eAAK0H,WAAL,CAAiBC,KAAjB,GAAyB,EAAzB;AACA,eAAKD,WAAL,CAAiBE,GAAjB,GAAuB,EAAvB;AACA,eAAKF,WAAL,CAAiBK,QAAjB,GAA4B,EAA5B;AACA,eAAKL,WAAL,CAAiBM,IAAjB,GAAwB,EAAxB;AACA,eAAKN,WAAL,CAAiBO,UAAjB,GAA8B,EAA9B;AACD;;;;;;;uBAjDUH,qB,EAAqB,mI,EAAA,uH,EAAA,+H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,gtB;AAAA;AAAA;ACTlC;;AACE;;AAA2C;AAAA,mBAAY,IAAAM,QAAA,EAAZ;AAAsB,WAAtB;;AACzC;;AACE;;AAAI;;AAAiB;;AACvB;;AACA;;AACE;;AAAO;;AAAK;;AACZ;;AAAsD;AAAA;AAAA;;AAAtD;;AACF;;AACA;;AACE;;AAAO;;AAAS;;AAChB;;AAAwD;AAAA;AAAA;;AAAxD;;AACF;;AACA;;AACE;;AAAO;;AAAI;;AACX;;AAAoD;AAAA;AAAA;;AAApD;;AACF;;AACA;;AACE;;AAAO;;AAAU;;AACjB;;AAA0D;AAAA;AAAA;;AAA1D;;AACF;;AACA;;AACE;;AAAO;;AAAQ;;AACf;;AAAuD;AAAA;AAAA;;AAAvD;;AACF;;AACA;;AACA;;AAAkD;;AAAmB;;AACrE;;AACA;;AAA2C;;AAAM;;AACnD;;AACF;;;;AAvB4D;;AAAA;;AAIE;;AAAA;;AAIJ;;AAAA;;AAIM;;AAAA;;AAIH;;AAAA;;AAGtD;;AAAA;;AAA+C;;AAAA;;;;;;;;;sEDjBzCN,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT7I,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACuBM;;AAAyD;;AAAiB;;;;AAA5C;;;;;;;;AAvBpC;;AACE;;AAAoC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AACE;;AAAI;;AAAQ;;AACd;;AACA;;AACE;;AAAO;;AAAU;;AACjB;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAAzD;;AACF;;AACA;;AACE;;AAAO;;AAAY;;AACnB;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAC1F;;AACA;;AACE;;AAAO;;AAAU;;AACjB;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAAzD;;AACF;;AACA;;AACE;;AAAO;;AAAQ;;AACf;;AAAuD;AAAA;;AAAA;;AAAA;AAAA;;AAAvD;;AACF;;AACA;;AACE;;AAAO;;AAAa;;AACpB;;AACA;;AAAyE;AAAA;;AAAA;;AAAA;AAAA;;AACzE;;AACF;;AACA;;AACA;;AAAwC;;AAAM;;AAChD;;AACF;;;;;;AAvB+D;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIF;;AAAA;;AAIhD;;AAAA;;AACkE;;AAAA;;;;;;;;;;;;;AAO/E;;AACE;;AACA;;AAAsE;;AAAe;;AACvF;;;;AADyB;;AAAA;;;;QDrBZkJ,oB;;;AAYX,oCAAmB5I,IAAnB,EAA6CC,QAA7C,EAA4E6E,YAA5E,EACmBpD,QADnB,EACmDxB,MADnD,EAC2EC,KAD3E,EACkG;AAAA;;AAD/E,aAAAH,IAAA,GAAAA,IAAA;AAA0B,aAAAC,QAAA,GAAAA,QAAA;AAA+B,aAAA6E,YAAA,GAAAA,YAAA;AACzD,aAAApD,QAAA,GAAAA,QAAA;AAAgC,aAAAxB,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAZ3E,aAAA0I,IAAA,GAAY;AACVC,mBAAS,EAAE,EADD;AAEVC,gBAAM,EAAE,EAFE;AAGVC,qBAAW,EAAE,EAHH;AAIV1I,iBAAO,EAAE,EAJC;AAKVD,mBAAS,EAAE,EALD;AAMV4I,sBAAY,EAAE,EANJ;AAOVC,0BAAgB,EAAE,IAAIC,KAAJ;AAPR,SAAZ;AAYqG;;;;mCAE7F;AAAA;;AACN,eAAK5I,SAAL,GAAiB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,QAAjE;AACA,eAAKoI,IAAL,CAAUxI,SAAV,GAAsB,KAAKJ,QAAL,CAAcmJ,cAAd,GAA+B,WAA/B,CAAtB;AACA,eAAKP,IAAL,CAAUvI,OAAV,GAAoB,KAAKL,QAAL,CAAcmJ,cAAd,GAA+B,SAA/B,CAApB;AACA,eAAKP,IAAL,CAAUK,gBAAV,CAA2B7C,IAA3B,CAAgC,KAAKrG,IAAL,CAAUkH,YAAV,EAAhC;AACA,eAAKmC,cAAL,GAAsB,KAAtB;AAEA,eAAKC,sBAAL;AAEA,eAAK5H,QAAL,CAAc6H,WAAd,GAA4B5I,SAA5B,CAAsC,UAAA6I,KAAK,EAAG;AAC5C,gBAAIC,WAAW,GAAG,OAAI,CAACzJ,IAAL,CAAUkH,YAAV,EAAlB;;AACA,gBAAIwC,iBAAiB,GAAGP,KAAK,EAA7B;AACA,gBAAIQ,6BAA6B,GAAGR,KAAK,EAAzC;AAEAK,iBAAK,CAACzH,OAAN,CAAc,UAAA8G,IAAI,EAAG;AACnB,kBAAIK,gBAAgB,GAAGL,IAAI,CAACK,gBAA5B;AACAA,8BAAgB,CAACnH,OAAjB,CAAyB,UAAA6H,WAAW,EAAG;AACrC,oBAAIA,WAAW,KAAKH,WAApB,EAAiC;AAC/B;AACA,sBAAII,KAAK,GAAGH,iBAAiB,CAACI,OAAlB,CAA0BjB,IAAI,CAACI,YAA/B,CAAZ;;AACA,sBAAIY,KAAK,IAAI,CAAb,EAAgB;AACdF,iDAA6B,CAACE,KAAD,CAA7B;AACD,mBAFD,CAGA;AAHA,uBAIK;AACHH,uCAAiB,CAACrD,IAAlB,CAAuBwC,IAAI,CAACI,YAA5B;AACAU,mDAA6B,CAACtD,IAA9B,CAAmC,CAAnC;AACD;AACF;AACF,eAbD;AAcD,aAhBD;;AAkBA,gBAAIqD,iBAAiB,CAACrG,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,kBAAIwG,KAAK,GAAG,CAAZ;AACA,kBAAIE,GAAG,GAAGJ,6BAA6B,CAAC,CAAD,CAAvC;;AACA,mBAAI,IAAIvG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACuG,6BAA6B,CAACtG,MAA7C,EAAqDD,CAAC,EAAtD,EAA0D;AACxD,oBAAIuG,6BAA6B,CAACvG,CAAD,CAA7B,GAAmC2G,GAAvC,EAA4C;AAC1CA,qBAAG,GAAGJ,6BAA6B,CAACvG,CAAD,CAAnC;AACAyG,uBAAK,GAAGzG,CAAR;AACD;AACF;;AAED,qBAAI,CAACyF,IAAL,CAAUI,YAAV,GAAyBS,iBAAiB,CAACG,KAAD,CAA1C;AACA,qBAAI,CAACR,cAAL,GAAsB,IAAtB;AACD;AACF,WApCD;AAqCD;;;qCAEY;AAAA;;AACX,cAAIW,MAAM,GAA0C3H,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAApD;AACA,eAAKuG,IAAL,CAAUI,YAAV,GAAyBe,MAAM,CAACC,OAAP,CAAeD,MAAM,CAACE,aAAtB,EAAqCC,KAA9D;AACA,eAAKzI,QAAL,CAAc0I,UAAd,CAAyB,KAAKvB,IAAL,CAAUC,SAAnC,EAA8C,KAAKD,IAAL,CAAUG,WAAxD,EAAqE,KAAKH,IAAL,CAAUvI,OAA/E,EAAwF,KAAKuI,IAAL,CAAUxI,SAAlG,EACE,KAAKwI,IAAL,CAAUI,YADZ,EAC0B,KAAKJ,IAAL,CAAUK,gBADpC,EACsDvI,SADtD,CACgE,UAAAC,IAAI,EAAI;AACpE,gBAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoB,KAAxB,EAA+B;AAC7B;AACA,qBAAI,CAACiI,IAAL,CAAUC,SAAV,GAAsB,EAAtB;AACA,qBAAI,CAACD,IAAL,CAAUE,MAAV,GAAmB,EAAnB;AACA,qBAAI,CAACF,IAAL,CAAUI,YAAV,GAAyB,EAAzB;AACA,qBAAI,CAACJ,IAAL,CAAUK,gBAAV,GAA6B,EAA7B;AACA,qBAAI,CAACL,IAAL,CAAUG,WAAV,GAAwB,EAAxB;AACD,aAPD,MAOO;AACL;AACA;AACA;AACAnI,0BAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAApC,EAJK,CAKL;;AACA,qBAAI,CAACV,MAAL,CAAYe,aAAZ,CAA0B,OAAI,CAACV,SAA/B;AACD;AACF,WAjBH;AAmBA,eAAKmB,QAAL,CAAc2I,kBAAd,CAAiC,KAAKxB,IAAL,CAAUC,SAA3C,EAAsD,KAAKD,IAAL,CAAUG,WAAhE,EAA6E,KAAKH,IAAL,CAAUxI,SAAvF,EAAkG,KAAKwI,IAAL,CAAUI,YAA5G,EAA0HtI,SAA1H,CAAoI,UAAAC,IAAI,EAAG;AACzIQ,mBAAO,CAACC,GAAR,CAAYT,IAAZ;AACD,WAFD;AAGD;;;iDAEwB;AACvB,eAAKkE,YAAL,CAAkBoB,gBAAlB,GAAqCvF,SAArC,CAA+C,UAAAC,IAAI,EAAG;AACpDA,gBAAI,CAACmB,OAAL,CAAa,UAAAgD,SAAS,EAAI;AACxB,kBAAIC,aAAa,GAAGD,SAAS,CAACC,aAA9B;AACA,kBAAIE,iBAAiB,GAAGH,SAAS,CAACG,iBAAlC;AACA,kBAAIoF,SAAS,GAAGtF,aAAa,GAAG,IAAhB,GAAuBE,iBAAvB,GAA2C,GAA3D;AAEA,kBAAI8E,MAAM,GAA0C3H,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAApD;AACA0H,oBAAM,CAACC,OAAP,CAAeM,GAAf,CAAmB,IAAIC,MAAJ,CAAWF,SAAX,EAAsBtF,aAAtB,CAAnB;AACD,aAPD;AAQD,WATD;AAUD;;;;;;;uBArGU4D,oB,EAAoB,mI,EAAA,qI,EAAA,8I,EAAA,qI,EAAA,uH,EAAA,+H;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,u1B;AAAA;AAAA;ACZjC;;AA+BA;;;;AA/B4B;;AA+BvB;;AAAA;;;;;;;;;sEDnBQA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTpJ,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACE;;AAAoC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AACE;;AAAI;;AAAU;;AAChB;;AACA;;AACE;;AAAO;;AAAU;;AACjB;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAAzD;;AACF;;AACA;;AACE;;AAAO;;AAAY;;AACnB;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAC1F;;AACA;;AACE;;AAAO;;AAAa;;AACpB;;AAAqD;AAAA;;AAAA;;AAAA;AAAA;;AACrD;;AACF;;AACA;;AACA;;AAAwC;;AAAM;;AAAU;;AACxD;;AAA8C;;AAAM;;AACtD;;AACF;;;;;;AAf+D;;AAAA;;AAIA;;AAAA;;AAIJ;;AAAA;;;;;;;;;;;;;AAQ3D;;AACE;;AACA;;AAAsE;;AAAe;;AACvF;;;;AADyB;;AAAA;;;;QDbZ+K,oB;;;AAWX,oCAAmBzK,IAAnB,EAA6C0K,OAA7C,EAA4ExK,MAA5E,EAAoGC,KAApG,EAAmI2E,YAAnI,EAAmK;AAAA;;AAAhJ,aAAA9E,IAAA,GAAAA,IAAA;AAA0B,aAAA0K,OAAA,GAAAA,OAAA;AAA+B,aAAAxK,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAA+B,aAAA2E,YAAA,GAAAA,YAAA;AAVnI,aAAA+D,IAAA,GAAY;AACVC,mBAAS,EAAE,EADD;AAEVE,qBAAW,EAAE,EAFH;AAGVD,gBAAM,EAAE,EAHE;AAIV1I,mBAAS,EAAC,EAJA;AAKVC,iBAAO,EAAE,EALC;AAMV2I,sBAAY,EAAC,EANH;AAOVC,0BAAgB,EAAE,IAAIC,KAAJ;AAPR,SAAZ;AAUsK;;;;mCAE9J;AACN,eAAK5I,SAAL,GAAiB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,QAAjE;AACA,eAAKoI,IAAL,GAAY,KAAK6B,OAAL,CAAaC,aAAb,EAAZ;AACA,eAAKrB,sBAAL;AACD;;;mCAEU;AAAA;;AACT,cAAIU,MAAM,GAA0C3H,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAApD;AACA,eAAKuG,IAAL,CAAUI,YAAV,GAAyBe,MAAM,CAACC,OAAP,CAAeD,MAAM,CAACE,aAAtB,EAAqCC,KAA9D;AACA,eAAKO,OAAL,CAAaE,QAAb,CAAsB,KAAK/B,IAAL,CAAUC,SAAhC,EAA2C,KAAKD,IAAL,CAAUG,WAArD,EAAkE,KAAKH,IAAL,CAAUE,MAA5E,EAAoF,KAAKF,IAAL,CAAUvI,OAA9F,EAAuG,KAAKuI,IAAL,CAAUxI,SAAjH,EACE,KAAKwI,IAAL,CAAUI,YADZ,EAC0B,KAAKJ,IAAL,CAAUK,gBADpC,EACsDvI,SADtD,CACgE,UAAAC,IAAI,EAAG;AACrE,gBAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoB,KAAxB,EAA+B;AAC7B;AACA,qBAAI,CAACiI,IAAL,CAAUC,SAAV,GAAsB,EAAtB;AACA,qBAAI,CAACD,IAAL,CAAUG,WAAV,GAAwB,EAAxB;AACA,qBAAI,CAACH,IAAL,CAAUI,YAAV,GAAyB,EAAzB;;AACA,qBAAI,CAACyB,OAAL,CAAaG,cAAb;AACD,aAND,MAOK;AACH,qBAAI,CAACH,OAAL,CAAaG,cAAb;;AACA,qBAAI,CAAC3K,MAAL,CAAYe,aAAZ,CAA0B,OAAI,CAACV,SAA/B;AACD;AACF,WAbD;AAcD;;;iDAEwB;AACvB,eAAKuE,YAAL,CAAkBoB,gBAAlB,GAAqCvF,SAArC,CAA+C,UAAAC,IAAI,EAAI;AACrDA,gBAAI,CAACmB,OAAL,CAAa,UAAAgD,SAAS,EAAI;AACxB,kBAAIC,aAAa,GAAGD,SAAS,CAACC,aAA9B;AACA,kBAAIE,iBAAiB,GAAGH,SAAS,CAACG,iBAAlC;AACA,kBAAIoF,SAAS,GAAGtF,aAAa,GAAG,IAAhB,GAAuBE,iBAAvB,GAA2C,GAA3D;AAEA,kBAAI8E,MAAM,GAAyC3H,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAnD;AACA0H,oBAAM,CAACC,OAAP,CAAeM,GAAf,CAAmB,IAAIC,MAAJ,CAAWF,SAAX,EAAsBtF,aAAtB,CAAnB;AACD,aAPD;AAQD,WATD;AAUD;;;;;;;uBAjDUyF,oB,EAAoB,mI,EAAA,qI,EAAA,uH,EAAA,+H,EAAA,8I;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,ilB;AAAA;AAAA;ACZjC;;AAuBA;;;;AAvB4B;;AAuBvB;;AAAA;;;;;;;;;sEDXQA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTjL,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACWM;;AACE;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AACE;;AAAO;;AAAU;;AACjB;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AAAzD;;AACF;;AACA;;AACE;;AAAO;;AAAO;;AACd;;AAAsD;AAAA;;AAAA;;AAAA;AAAA;;AAAtD;;AACF;;AACA;;AACE;;AAAO;;AAAa;;AACpB;;AAA4D;AAAA;;AAAA;;AAAA;AAAA;;AAA5D;;AACF;;AACA;;AACA;;AAA+B;;AAAgB;;AAC/C;;AAA8C;;AAAM;;AACtD;;AACA;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAM;;AACjE;;;;;;AAnB4C;;AAImB;;AAAA;;AAIH;;AAAA;;AAIM;;AAAA;;AAG3D;;AAAA;;AAA4B;;AAAA;;;;;;;;;;;;;;AA1BzC;;AACE;;AAAwB;;AAAoC;;AAC5D;;AAAK;;AACL;;AAA+E;;AAAS;;AACxF;;AAAK;;AACL;;AAA6E;;AAAe;;AAC5F;;AAAK;;AACL;;AAAuD;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAa;;AACpG;;AAAK;;AACL;;AACE;;AACE;;AAoBF;;AACF;;AACA;;AAAK;;AAEL;;AACE;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACA;;AAEF;;AACF;;;;;;AAhEiC;;AACP;;AAAA;;AAUC;;AAAA;;;;;;;;;;;;;AAsD3B;;AACE;;AACA;;AAAsE;;AAAe;;AACvF;;;;AADyB;;AAAA;;;;QDxDZoL,c;;;AAeX,8BAAmB9K,IAAnB,EAA6C0K,OAA7C,EAA4ExK,MAA5E,EAAoGC,KAApG,EAA2H;AAAA;;AAAxG,aAAAH,IAAA,GAAAA,IAAA;AAA0B,aAAA0K,OAAA,GAAAA,OAAA;AAA+B,aAAAxK,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAdpG,aAAA0I,IAAA,GAAY;AACVE,gBAAM,EAAE,EADE;AAEVD,mBAAS,EAAE,EAFD;AAGVG,sBAAY,EAAE,EAHJ;AAIV5I,mBAAS,EAAE;AAJD,SAAZ;AAWA,aAAAyF,YAAA,GAAsB,EAAtB;AAIC;;;;mCAEO;AACN,eAAKiF,IAAL,GAAY,IAAZ;AACA,eAAKhF,cAAL,GAAsB,KAAtB;AACA,eAAKpE,SAAL,GAAiB,CAAjB;AACA,eAAKpB,SAAL,GAAiB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,WAApB,CAAgC,WAAhC,KAAgD,GAAjE;;AACA,cAAII,YAAY,CAAC,cAAD,CAAhB,EAAkC;AAChC,iBAAKmK,oBAAL,GAA4B,IAA5B;AACA,gBAAI3K,SAAS,GAAGU,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,cAAD,CAAvB,EAAyC,WAAzC,CAAhB;AACA,iBAAKoK,gBAAL,GAAwB5K,SAAxB;AACA,iBAAKwI,IAAL,CAAUxI,SAAV,GAAsBA,SAAtB;AACD,WALD,MAMK;AACH,iBAAK2K,oBAAL,GAA4B,KAA5B;AACA,iBAAK9K,MAAL,CAAY8C,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACD;;AAED,eAAKgD,SAAL;AACD;;;qCAEY;AAAA;;AACX,cAAI,KAAK6C,IAAL,CAAUC,SAAV,KAAwB,EAAxB,IAA8B,KAAKD,IAAL,CAAUE,MAAV,KAAqB,EAAnD,IAAyD,KAAKF,IAAL,CAAUI,YAAV,KAA2B,EAAxF,EAA4F;AAC1F,iBAAKnD,YAAL,GAAoB,oBAApB;AACD,WAFD,MAGK;AACH,iBAAK4E,OAAL,CAAaQ,UAAb,CAAwB,KAAKrC,IAAL,CAAUC,SAAlC,EAA6C,KAAKD,IAAL,CAAUE,MAAvD,EAA+D,KAAKF,IAAL,CAAUI,YAAzE,EAAuF,KAAKJ,IAAL,CAAUxI,SAAjG,EAA4GM,SAA5G,CAAsH,UAAAC,IAAI,EAAE;AAC1H,qBAAI,CAAC6F,WAAL;;AACA,qBAAI,CAACX,YAAL,GAAoB,EAApB;AACAlF,kBAAI,CAACmB,OAAL,CAAa,UAAA8G,IAAI,EAAG;AAClB,uBAAI,CAAC3G,MAAL,CAAY2G,IAAI,CAACC,SAAjB,EAA4BD,IAAI,CAACG,WAAjC,EAA8CH,IAAI,CAACE,MAAnD,EAA2DF,IAAI,CAACxI,SAAhE,EAA2EwI,IAAI,CAACI,YAAhF,EAA8FJ,IAAI,CAACK,gBAAnG;AACD,eAFD;AAGD,aAND;AAOD;AACF;;;6CAEoB;AACnB,eAAKnD,cAAL,GAAsB,CAAC,KAAKA,cAA5B;;AACA,cAAI,KAAKA,cAAL,KAAwB,KAA5B,EAAmC;AACjC,iBAAKD,YAAL,GAAoB,EAApB;AACD;AACF;;;uCAEc;AACb,eAAKC,cAAL,GAAsB,KAAtB;AACA,eAAKD,YAAL,GAAoB,EAApB;AACA,eAAKW,WAAL;AACA,eAAKT,SAAL;AACD;;;oCAEW;AAAA;;AACV,cAAI1F,OAAO,GAAGS,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,cAAD,CAAvB,EAAyC,SAAzC,CAAd;AACA,eAAK6J,OAAL,CAAaS,oBAAb,CAAkC7K,OAAlC,EAA2CK,SAA3C,CAAqD,UAAAC,IAAI,EAAG;AAC1DA,gBAAI,CAACmB,OAAL,CAAa,UAAA8G,IAAI,EAAI;AACnB,qBAAI,CAAC3G,MAAL,CAAY2G,IAAI,CAACC,SAAjB,EAA4BD,IAAI,CAACG,WAAjC,EAA8CH,IAAI,CAACE,MAAnD,EAA2DF,IAAI,CAACxI,SAAhE,EAA2EwI,IAAI,CAACI,YAAhF,EAA8FJ,IAAI,CAACK,gBAAnG;;AACA,kBAAI9G,UAAU,GAAG,OAAI,CAACT,SAAtB;AACA,kBAAIzB,MAAM,GAAG,OAAI,CAACA,MAAlB;AACA,kBAAIwK,OAAO,GAAG,OAAI,CAACA,OAAnB;AACA,kBAAIU,2BAA2B,GAAG,OAAI,CAACA,2BAAvC;AACA,kBAAIC,OAAO,GAAG,OAAI,CAACrL,IAAnB;AACA,kBAAIsL,IAAI,GAAG,OAAX;AAEAjJ,sBAAQ,CAACC,cAAT,CAAwB,aAAaF,UAArC,EAAiDG,gBAAjD,CAAkE,OAAlE,EAA2E;AACzE,oBAAIC,KAAK,GAAwCH,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAjD;AACA,oBAAIG,IAAI,GAAGD,KAAK,CAACC,IAAjB;AAEA,oBAAIqG,SAAS,GAAGrG,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAA1C;AACAvB,uBAAO,CAACC,GAAR,CAAYyH,SAAZ;AAEA,oBAAIE,WAAW,GAAGvG,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAA5C;AACAvB,uBAAO,CAACC,GAAR,CAAY2H,WAAZ;AAEA,oBAAID,MAAM,GAAGtG,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAAvC;AACAvB,uBAAO,CAACC,GAAR,CAAY0H,MAAZ;AAEA,oBAAI1I,SAAS,GAAGoC,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAA1C;AACAvB,uBAAO,CAACC,GAAR,CAAYhB,SAAZ;AAEA,oBAAI4I,YAAY,GAAGxG,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAA7C;AACAvB,uBAAO,CAACC,GAAR,CAAY4H,YAAZ;AAEA,oBAAIsC,wBAAwB,GAAG9I,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAAzD;AACA,oBAAIuG,gBAAgB,GAAGkC,2BAA2B,CAACG,wBAAD,EAA2B,EAA3B,CAAlD;AACAnK,uBAAO,CAACC,GAAR,CAAY6H,gBAAZ;AAEA,oBAAIsC,UAAU,GAAG;AACf1C,2BAAS,EAAEA,SADI;AAEfE,6BAAW,EAAEA,WAFE;AAGfD,wBAAM,EAAEA,MAHO;AAIf1I,2BAAS,EAACA,SAJK;AAKfC,yBAAO,EAAEA,OALM;AAMf2I,8BAAY,EAACA,YANE;AAOfC,kCAAgB,EAAEA;AAPH,iBAAjB;AAUA9H,uBAAO,CAACC,GAAR,CAAYmK,UAAZ;AACAd,uBAAO,CAACe,aAAR,CAAsBD,UAAtB;AACAtL,sBAAM,CAAC8C,QAAP,CAAgB,CAAC,eAAD,CAAhB;AACD,eApCD;AAsCAX,sBAAQ,CAACC,cAAT,CAAwB,aAAaF,UAArC,EAAiDG,gBAAjD,CAAkE,OAAlE,EAA2E;AACzE,oBAAIC,KAAK,GAAwCH,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAjD;AACA,oBAAIG,IAAI,GAAGD,KAAK,CAACC,IAAjB;AAEA,oBAAIsG,MAAM,GAAGtG,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAAvC;AACAvB,uBAAO,CAACC,GAAR,CAAY0H,MAAZ;AAEA,oBAAI2C,OAAO,GAAGL,OAAO,CAACnE,YAAR,EAAd;AAEAwD,uBAAO,CAACiB,WAAR,CAAoB5C,MAApB,EAA4BpI,SAA5B,CAAsC,UAAAC,IAAI,EAAG;AAC3C,sBAAIgL,YAAY,GAAkBhL,IAAI,CAACsI,gBAAvC;;AACA,sBAAI0C,YAAY,CAAC9B,OAAb,CAAqB4B,OAArB,MAAkC,CAAC,CAAvC,EAA0C;AACxC9K,wBAAI,CAACsI,gBAAL,CAAsB7C,IAAtB,CAA2BqF,OAA3B;AACAhB,2BAAO,CAACE,QAAR,CAAiBhK,IAAI,CAACkI,SAAtB,EAAiClI,IAAI,CAACoI,WAAtC,EAAmDpI,IAAI,CAACmI,MAAxD,EAAgEnI,IAAI,CAACN,OAArE,EAA8EM,IAAI,CAACP,SAAnF,EAA8FO,IAAI,CAACqI,YAAnG,EAAiHrI,IAAI,CAACsI,gBAAtH,EAAwIvI,SAAxI,CAAkJ,UAAAC,IAAI,EAAG;AACvJ8J,6BAAO,CAACe,aAAR,CAAsB7K,IAAtB;AACA6B,0BAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAA1B,GAAsC/B,IAAI,CAACsI,gBAAL,CAAsB2C,IAAtB,CAA2B,IAA3B,CAAtC;AACD,qBAHD;AAID;AACF,iBATD;AAUD,eAnBD;AAqBAxJ,sBAAQ,CAACC,cAAT,CAAwB,eAAeF,UAAvC,EAAmDG,gBAAnD,CAAoE,OAApE,EAA6E;AAC3E,oBAAIC,KAAK,GAAwCH,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAjD;AACA,oBAAIG,IAAI,GAAGD,KAAK,CAACC,IAAjB;AAEA,oBAAIsG,MAAM,GAAGtG,IAAI,CAACL,UAAD,CAAJ,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BC,SAAvC;AACAvB,uBAAO,CAACC,GAAR,CAAY0H,MAAZ;AAEA2B,uBAAO,CAACoB,UAAR,CAAmB/C,MAAnB,EAA2BpI,SAA3B,CAAqC,UAAAC,IAAI,EAAG;AAC1C0K,sBAAI,CAAC7E,WAAL;AACA6E,sBAAI,CAACtF,SAAL;AACD,iBAHD;AAID,eAXD;AAaA,qBAAI,CAACrE,SAAL,IAAkB,CAAlB;AACD,aAlFD;AAmFD,WApFD;AAqFD;;;oDAE2B4J,wB,EAAiCG,O,EAAiB;AAC5E,cAAIK,KAAK,GAAG,IAAI5C,KAAJ,EAAZ;;AACA,cAAIuC,OAAO,KAAK,EAAhB,EAAoB;AAClBtK,mBAAO,CAACC,GAAR,CAAY,YAAYkK,wBAAwB,CAACS,KAAzB,CAA+B,GAA/B,CAAxB;AACA,mBAAOT,wBAAwB,CAACS,KAAzB,CAA+B,GAA/B,CAAP;AACD,WAHD,MAIK;AACHD,iBAAK,GAAGR,wBAAwB,CAACS,KAAzB,CAA+B,GAA/B,CAAR;AACAD,iBAAK,CAAC1F,IAAN,CAAWqF,OAAX;AACD;AACF;;;+BAEM5C,S,EAAWE,W,EAAaD,M,EAAQ1I,S,EAAW4I,Y,EAAcC,gB,EAAiC;AAC/F,cAAI1G,KAAK,GAAwCH,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAjD;AACA,cAAImB,MAAM,GAAGjB,KAAK,CAACkB,SAAN,CAAgB,KAAK/B,SAArB,CAAb;AAEA,cAAIgC,SAAS,GAAGF,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIC,SAAS,GAAGJ,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIE,SAAS,GAAGL,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIG,SAAS,GAAGN,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAII,SAAS,GAAGP,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIqI,SAAS,GAAGxI,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIsI,SAAS,GAAGzI,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AAEAD,mBAAS,CAAChB,SAAV,GAAsBmG,SAAtB;AACAjF,mBAAS,CAAClB,SAAV,GAAsBqG,WAAtB;AACAlF,mBAAS,CAACnB,SAAV,GAAsBoG,MAAtB;AACAhF,mBAAS,CAACpB,SAAV,GAAsBtC,SAAtB;AACA2D,mBAAS,CAACrB,SAAV,GAAsBsG,YAAtB;AACAgD,mBAAS,CAACtJ,SAAV,GAAsBuG,gBAAgB,CAAC2C,IAAjB,CAAsB,IAAtB,CAAtB;AAEA,cAAI5H,SAAS,GAAG,aAAa,KAAKtC,SAAlC;AACA,cAAIwK,SAAS,GAAG,aAAa,KAAKxK,SAAlC;AACA,cAAIyK,WAAW,GAAG,eAAe,KAAKzK,SAAtC;AAEA,cAAIwC,SAAS,GAAG,KAAKnE,IAAL,CAAUoE,WAAV,EAAhB;;AAEA,cAAID,SAAJ,EAAe;AACb,gBAAIE,iBAAiB,GAAG,wCAAwCJ,SAAxC,GAAoD,6BAApD,GACtB,qCADsB,GACkBkI,SADlB,GAC8B,2BAD9B,GAEtB,qCAFsB,GAEkBC,WAFlB,GAEgC,yBAFxD;AAGD,WAJD,MAKK;AACH,gBAAI/H,iBAAiB,GAAG,wCAAwCJ,SAAxC,GAAoD,sCAApD,GACtB,qCADsB,GACkBkI,SADlB,GAC8B,2BAD9B,GAEtB,qCAFsB,GAEkBC,WAFlB,GAEgC,kCAFxD;AAGD;;AAEDF,mBAAS,CAAC5H,SAAV,GAAsBD,iBAAtB;AACD;;;sCAEa;AACZ,cAAI7B,KAAK,GAAwCH,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAjD;;AACA,iBAAME,KAAK,CAACC,IAAN,CAAWY,MAAX,GAAoB,CAA1B,EAA6B;AAC3Bb,iBAAK,CAACkE,SAAN,CAAgB,CAAC,CAAjB;AACD;;AACD,eAAK/E,SAAL,GAAiB,CAAjB;AACD;;;;;;;uBApNUmJ,c,EAAc,mI,EAAA,qI,EAAA,uH,EAAA,+H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,qqC;AAAA;AAAA;ACX3B;;AAiEA;;;;AAjEmE;;AAiE9D;;AAAA;;;;;;;;;sEDtDQA,c,EAAc;cAN1B,uDAM0B;eANhB;AACTtL,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAMgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEX3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGM2M,K;;;;QAUOC,W;;;AACX,2BAAoB1G,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AACnB;;;;8BACKsC,K,EAAeC,G,EAAa;AAChC,iBAAO,KAAKvC,IAAL,CAAUiD,IAAV,CAAe,kBAAf,EAAmC;AACxCX,iBAAK,EAAEA,KADiC;AAExCqE,oBAAQ,EAAEpE;AAF8B,WAAnC,CAAP;AAID;;;iCACQD,K,EAAcC,G,EAAYG,Q,EAAiBC,I,EAAaC,U,EAAmB;AAClF,iBAAO,KAAK5C,IAAL,CAAUiD,IAAV,CAAe,YAAf,EAA6B;AAClCX,iBAAK,EAAEA,KAD2B;AAElCqE,oBAAQ,EAAEpE,GAFwB;AAGlCG,oBAAQ,EAAEA,QAHwB;AAIlCC,gBAAI,EAACA,IAJ6B;AAKlCC,sBAAU,EAAEA;AALsB,WAA7B,CAAP;AAOD;;;mCAEUgE,S,EAAmBD,Q,EAAkB;AAC9C,eAAK3G,IAAL,CAAUiD,IAAV,CAAe,4CAAf,EAA6D;AAC3DX,iBAAK,EAAEsE,SADoD;AAE3DD,oBAAQ,EAAEA;AAFiD,WAA7D;AAIA,eAAKE,MAAL;AACD;;;qCAEY;AACX,iBAAO,CAAC,CAAC5L,YAAY,CAAC,YAAD,CAArB;AACD;;;iCACQ;AACPA,sBAAY,CAAC,YAAD,CAAZ,GAA6B,EAA7B;AACD;;;uCACc;AACb,cAAIA,YAAY,CAAC,YAAD,CAAhB,EAAgC;AAC9B,mBAAOE,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,YAAD,CAAvB,EAAuC,OAAvC,CAAP;AACD,WAFD,MAEO;AACL,mBAAO,EAAP;AACD;AACF;;;0CAEiB;AAChB,cAAIA,YAAY,CAAC,YAAD,CAAhB,EAAgC;AAC9B,mBAAOE,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,YAAD,CAAvB,EAAuC,UAAvC,CAAP;AACD,WAFD,MAEO;AACL,mBAAO,EAAP;AACD;AACF;;;sCAEa;AACZ,cAAIA,YAAY,CAAC,YAAD,CAAhB,EAAgC;AAC9B,mBAAOE,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,YAAD,CAAvB,EAAuC,MAAvC,CAAP;AACD,WAFD,MAEO;AACL,mBAAO,EAAP;AACD;AACF;;;4CACmB;AAClB,cAAIA,YAAY,CAAC,YAAD,CAAhB,EAAgC;AAC9B,mBAAOE,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,YAAD,CAAvB,EAAuC,YAAvC,CAAP;AACD,WAFD,MAEO;AACL,mBAAO,EAAP;AACD;AACF;;;sCAEa;AACZ,iBAAO,KAAK+E,IAAL,CAAUO,GAAV,CAAuB,iCAAvB,CAAP;AACD;;;sCAEa;AACZ,cAAI,KAAKuG,UAAL,EAAJ,EACE,OAAO3L,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,YAAD,CAAvB,EAAuC,MAAvC,MAAmD,OAA1D,CADF,KAEK,OAAO,KAAP;AACN;;;;;;;uBAxEUyL,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACV1H,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACbxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGM+H,K;;;;QAUOC,Y;;;AACX,4BAAoBhH,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AACnB;;;;oCACWvF,S,EAAmB;AAC7B,iBAAO,KAAKuF,IAAL,CAAUiD,IAAV,CAAe,kCAAf,EAAmD;AACxDxI,qBAAS,EAAEA,SAD6C;AAExDC,mBAAO,EAAE,KAAKuM,UAAL,EAF+C;AAGxD1K,2BAAe,EAAE;AAHuC,WAAnD,CAAP;AAKD;;;kCAES9B,S,EAAkBC,O,EAAgB;AAC1C,iBAAO,KAAKsF,IAAL,CAAUiD,IAAV,CAAe,sCAAsCvI,OAArD,EAA8D;AACnEA,mBAAO,EAAEA,OAD0D;AAEnED,qBAAS,EAAEA;AAFwD,WAA9D,CAAP;AAID;;;2CAEkBC,O,EAAgBD,S,EAAmB;AACpD,iBAAO,KAAKuF,IAAL,CAAUiD,IAAV,CAAe,qDAAf,EAAsE;AAC3EvI,mBAAO,EAAEA,OADkE;AAE3ED,qBAAS,EAAEA;AAFgE,WAAtE,CAAP;AAID;;;uCAEc;AACb,iBAAO,KAAKuF,IAAL,CAAUO,GAAV,CAAuB,kCAAvB,CAAP;AACD;;;qCAEY7F,O,EAAiB;AAC5B,iBAAO,KAAKsF,IAAL,CAAUO,GAAV,CAAqB,sCAAsC7F,OAA3D,CAAP;AACD;;;qCAEY;AACX,iBAAO,MAAMwM,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAb;AACD;;;uCAEc7M,K,EAAc;AAC3BS,sBAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeZ,KAAf,CAArC;AACD;;;0CAEiB;AACjBS,sBAAY,CAAC,cAAD,CAAZ,GAA+B,EAA/B;AACA;;;yCAEgB;AACf,iBAAOE,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,cAAD,CAAvB,CAAP;AACD;;;;;;;uBA/CU+L,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAHX;;;;;sEAGDA,Y,EAAY;cAJxB,wDAIwB;eAJb;AACVhI,oBAAU,EAAE;AADF,S;AAIa,Q;;;;;;;;;;;;;;;;;;;;;;ACbzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGMsI,S;;;;QASOC,gB;;;AACX,gCAAoBvH,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;wCAEzBZ,a,EAAuBC,a,EAAuBC,iB,EAA2B;AACvF,iBAAO,KAAKU,IAAL,CAAUiD,IAAV,CAAe,sCAAf,EAAuD;AAC5D7D,yBAAa,EAAEA,aAD6C;AAE5DC,yBAAa,EAAEA,aAF6C;AAG5DC,6BAAiB,EAAEA;AAHyC,WAAvD,CAAP;AAKD;;;sCAEaF,a,EAAuBC,a,EAAuBC,iB,EAA2B;AACrF,iBAAO,KAAKU,IAAL,CAAUiD,IAAV,CAAe,0CAA0C7D,aAAzD,EAAwE;AAC7EA,yBAAa,EAAEA,aAD8D;AAE7EC,yBAAa,EAAEA,aAF8D;AAG7EC,6BAAiB,EAAEA;AAH0D,WAAxE,CAAP;AAKD;;;2CAEkB;AACjB,iBAAO,KAAKU,IAAL,CAAUO,GAAV,CAA2B,sCAA3B,CAAP;AACD;;;2CAEkBnB,a,EAAuB;AACxC,iBAAO,KAAKY,IAAL,CAAUO,GAAV,CAAyB,0CAA0CnB,aAAnE,CAAP;AACD;;;2CAEkBD,S,EAAsB;AACvClE,sBAAY,CAACC,OAAb,CAAqB,kBAArB,EAAyCC,IAAI,CAACC,SAAL,CAAe+D,SAAf,CAAzC;AACD;;;8CAEqB;AACpBlE,sBAAY,CAAC,kBAAD,CAAZ,GAAmC,EAAnC;AACD;;;6CAEoB;AACnB,iBAAOE,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,kBAAD,CAAvB,CAAP;AACD;;;wCAEemE,a,EAAuBC,a,EAAuBC,iB,EAA2B;AACvF,cAAIkI,KAAK,GAAG,EAAZ;;AACA,cAAIpI,aAAa,IAAI,EAAjB,IAAuBC,aAAa,IAAI,EAAxC,IAA8CC,iBAAiB,IAAI,EAAvE,EAA2E;AACzEkI,iBAAK,GAAG;AACNpI,2BAAa,EAAEA,aADT;AAENC,2BAAa,EAAEA,aAFT;AAGNC,+BAAiB,EAAEA;AAHb,aAAR;AAKD,WAND,MAOK,IAAIF,aAAa,IAAI,EAAjB,IAAuBC,aAAa,IAAI,EAA5C,EAAgD;AACnDmI,iBAAK,GAAG;AACNpI,2BAAa,EAAEA,aADT;AAENC,2BAAa,EAAEA;AAFT,aAAR;AAID,WALI,MAMA,IAAID,aAAa,IAAI,EAAjB,IAAuBE,iBAAiB,IAAI,EAAhD,EAAoD;AACvDkI,iBAAK,GAAG;AACNpI,2BAAa,EAAEA,aADT;AAENE,+BAAiB,EAAEA;AAFb,aAAR;AAID,WALI,MAMA,IAAID,aAAa,IAAI,EAAjB,IAAuBC,iBAAiB,IAAI,EAAhD,EAAoD;AACvDkI,iBAAK,GAAG;AACNnI,2BAAa,EAAEA,aADT;AAENC,+BAAiB,EAAEA;AAFb,aAAR;AAID,WALI,MAMA,IAAID,aAAa,IAAI,EAArB,EAAyB;AAC5BmI,iBAAK,GAAG;AACNnI,2BAAa,EAAEA;AADT,aAAR;AAGD,WAJI,MAKA,IAAIC,iBAAiB,IAAI,EAAzB,EAA6B;AAChCkI,iBAAK,GAAG;AACNlI,+BAAiB,EAAEA;AADb,aAAR;AAGD,WAJI,MAKA,IAAIF,aAAa,IAAI,EAArB,EAAyB;AAC5BoI,iBAAK,GAAG;AACNpI,2BAAa,EAAEA;AADT,aAAR;AAGD;;AAED,iBAAO,KAAKY,IAAL,CAAUiD,IAAV,CAA4B,sDAA5B,EAAoFuE,KAApF,CAAP;AACD;;;;;;;uBAnFUD,gB,EAAgB,uH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVvI,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;ACZ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGMyI,I;;;;QAUA7L,U;;;;QASO8L,Y;;;AAIX,4BAAoB1H,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHpB,aAAA2H,uBAAA,GAA0B,6LAA1B;AACA,aAAAC,cAAA,GAAiB,iBAAjB;AAGC;;;;mCAEU1E,S,EAAmBE,W,EAAqB1I,O,EAAiBD,S,EAAkB4I,Y,EAAsBC,gB,EAAgC;AAC1I,iBAAO,KAAKtD,IAAL,CAAUiD,IAAV,CAAe,iCAAf,EAAkD;AACvDC,qBAAS,EAAEA,SAD4C;AAEvDE,uBAAW,EAAEA,WAF0C;AAGvDC,wBAAY,EAAEA,YAHyC;AAIvDF,kBAAM,EAAE,KAAK8D,UAAL,EAJ+C;AAKvDvM,mBAAO,EAAEA,OAL8C;AAMvDD,qBAAS,EAAEA,SAN4C;AAOvD6I,4BAAgB,EAAEA;AAPqC,WAAlD,CAAP;AASD;;;2CAEkBJ,S,EAAmBE,W,EAAqB3I,S,EAAkB4I,Y,EAAsB;AACjG,cAAItE,GAAG,GAAG,gCAAgC,KAAK6I,cAArC,GAAsD,qBAAtD,GAA8E,KAAKD,uBAA7F;AACA,cAAIE,aAAa,GAAG,oCACA,cADA,GACiB3E,SADjB,GAC6B,KAD7B,GAEA,gBAFA,GAEmBE,WAFnB,GAEiC,KAFjC,GAGA,cAHA,GAGiB3I,SAHjB,GAG6B,KAH7B,GAIA,iBAJA,GAIoB4I,YAJxC;AAKA,iBAAO,KAAKrD,IAAL,CAAUiD,IAAV,CAAelE,GAAf,EAAoB;AACzB+I,mBAAO,EAAGD;AADe,WAApB,CAAP;AAGD;;;iCAEQ3E,S,EAAmBE,W,EAAqBD,M,EAAgBzI,O,EAAiBD,S,EAAkB4I,Y,EAAsBC,gB,EAAgC;AACxJ,iBAAO,KAAKtD,IAAL,CAAUiD,IAAV,CAAqB,qCAAqCE,MAA1D,EAAkE;AACvEA,kBAAM,EAAEA,MAD+D;AAEvED,qBAAS,EAAEA,SAF4D;AAGvEE,uBAAW,EAAEA,WAH0D;AAIvE1I,mBAAO,EAAEA,OAJ8D;AAKvED,qBAAS,EAAEA,SAL4D;AAMvE4I,wBAAY,EAAEA,YANyD;AAOvEC,4BAAgB,EAAEA;AAPqD,WAAlE,CAAP;AASD;;;6CAEoB5I,O,EAAiB;AACpC,iBAAO,KAAKsF,IAAL,CAAUiD,IAAV,CAAuB,wCAAvB,EAAiE;AACtEvI,mBAAO,EAAEA;AAD6D,WAAjE,CAAP;AAGD;;;sCAGa;AACZ,iBAAO,KAAKsF,IAAL,CAAUO,GAAV,CAAsB,iCAAtB,CAAP;AACD;;;oCAEW4C,M,EAAgB;AACxB,iBAAO,KAAKnD,IAAL,CAAUiD,IAAV,CAAqB,wCAArB,EAA+D;AACpEE,kBAAM,EAAEA;AAD4D,WAA/D,CAAP;AAGH;;;qCAEY;AACX,iBAAO,MAAM+D,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAb;AACD;;;sCAEapE,I,EAAY;AACxBzH,iBAAO,CAACC,GAAR,CAAY,0BAA0BN,IAAI,CAACC,SAAL,CAAe6H,IAAf,CAAtC;AACAhI,sBAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAe6H,IAAf,CAApC;AACD;;;yCAEgB;AACfhI,sBAAY,CAAC,aAAD,CAAZ,GAA8B,EAA9B;AACD;;;wCAEe;AACd,iBAAOE,IAAI,CAACI,KAAL,CAAWN,YAAY,CAAC,aAAD,CAAvB,CAAP;AACD;;;mCAEUkI,M,EAAgB;AACzB,iBAAO,KAAKnD,IAAL,CAAUiD,IAAV,CAAe,4CAAf,EAA6D;AAClEE,kBAAM,EAAEA;AAD0D,WAA7D,CAAP;AAGD;;;iDAEwB;AACvB,iBAAO,KAAKnD,IAAL,CAAUO,GAAV,CAA4B,8CAA5B,CAAP;AACD;;;mDAE0B;AACzB,iBAAO,KAAKP,IAAL,CAAUO,GAAV,CAA4B,uDAA5B,CAAP;AACD;;;sDAE6B;AAC5B,iBAAO,KAAKP,IAAL,CAAUO,GAAV,CAA4B,0DAA5B,CAAP;AACD;;;mCAEU2C,S,EAAmBC,M,EAAgBE,Y,EAAsB5I,S,EAAmB;AACrF,cAAI+M,KAAK,GAAG,EAAZ;;AACA,cAAItE,SAAS,IAAI,EAAb,IAAmBC,MAAM,IAAI,EAA7B,IAAmCE,YAAY,IAAI,EAAvD,EAA2D;AACzDmE,iBAAK,GAAG;AACNrE,oBAAM,EAAEA,MADF;AAEND,uBAAS,EAAEA,SAFL;AAGNG,0BAAY,EAAEA,YAHR;AAIN5I,uBAAS,EAAEA;AAJL,aAAR;AAMD,WAPD,MAQK,IAAIyI,SAAS,IAAI,EAAb,IAAmBC,MAAM,IAAI,EAAjC,EAAqC;AACxCqE,iBAAK,GAAG;AACNrE,oBAAM,EAAEA,MADF;AAEND,uBAAS,EAAEA,SAFL;AAGNzI,uBAAS,EAAEA;AAHL,aAAR;AAKD,WANI,MAOA,IAAIyI,SAAS,IAAI,EAAb,IAAmBG,YAAY,IAAI,EAAvC,EAA2C;AAC9CmE,iBAAK,GAAG;AACNtE,uBAAS,EAAEA,SADL;AAENG,0BAAY,EAAEA,YAFR;AAGN5I,uBAAS,EAAEA;AAHL,aAAR;AAKD,WANI,MAOA,IAAI4I,YAAY,IAAI,EAAhB,IAAsBF,MAAM,IAAI,EAApC,EAAwC;AAC3CqE,iBAAK,GAAG;AACNrE,oBAAM,EAAEA,MADF;AAENE,0BAAY,EAAEA,YAFR;AAGN5I,uBAAS,EAAEA;AAHL,aAAR;AAKD,WANI,MAOA,IAAI4I,YAAY,IAAI,EAApB,EAAwB;AAC3BmE,iBAAK,GAAG;AACNnE,0BAAY,EAAEA,YADR;AAEN5I,uBAAS,EAAEA;AAFL,aAAR;AAID,WALI,MAMA,IAAIyI,SAAS,IAAI,EAAjB,EAAqB;AACxBsE,iBAAK,GAAG;AACNtE,uBAAS,EAAEA,SADL;AAENzI,uBAAS,EAAEA;AAFL,aAAR;AAID,WALI,MAMA,IAAI0I,MAAM,IAAI,EAAd,EAAkB;AACrBqE,iBAAK,GAAG;AACNrE,oBAAM,EAAEA,MADF;AAEN1I,uBAAS,EAAEA;AAFL,aAAR;AAID;;AAED,iBAAO,KAAKuF,IAAL,CAAUiD,IAAV,CAAuB,6CAAvB,EAAsEuE,KAAtE,CAAP;AACD;;;;;;;uBAlJUE,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAHX;;;;;sEAGDA,Y,EAAY;cAJxB,wDAIwB;eAJb;AACV1I,oBAAU,EAAE;AADF,S;AAIa,Q;;;;;;;;;;;;;;;;;;;;;;ACtBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGA;;;;;;AAAM,6FAAmB,MAAnB,EAAmB,YAAnB;;;;;;;;;;QDKO+I,yB;;;AAUX,yCAAYjD,OAAZ,EAAmC;AAAA;;AAAA;;AARnC,aAAA9J,IAAA,GAAY,CACV;AACEgN,aAAG,EAAE,mBADP;AAEE;AACAC,gBAAM,EAAE;AAHV,SADU,CAAZ;AASE,aAAKC,YAAL,GAAoB,KAApB;AACA,aAAK7D,OAAL,GAAe;AACb8D,eAAK,EAAE;AACLC,gBAAI,EAAE,kBADD;AAELC,kBAAM,EAAE,GAFH;AAGLC,kBAAM,EAAG;AACPC,iBAAG,EAAE,EADE;AAEPC,mBAAK,EAAE,EAFA;AAGPC,oBAAM,EAAE,EAHD;AAIPC,kBAAI,EAAE;AAJC,aAHJ;AASLC,aAAC,EAAE,WAASC,CAAT,EAAU;AAAE,qBAAOA,CAAC,CAACC,KAAT;AAAgB,aAT1B;AAULC,aAAC,EAAE,WAASF,CAAT,EAAU;AAAE,qBAAOA,CAAC,CAACrE,KAAF,GAAW,KAAlB;AAA0B,aAVpC;AAWLwE,sBAAU,EAAE,IAXP;AAYLC,uBAAW,EAAE,qBAASJ,CAAT,EAAU;AACrB,qBAAOK,EAAE,CAACC,MAAH,CAAU,MAAV,EAAkBN,CAAlB,CAAP;AACD,aAdI;AAeLO,oBAAQ,EAAE,GAfL;AAgBLC,iBAAK,EAAE;AACLC,uBAAS,EAAE;AADN,aAhBF;AAmBLC,iBAAK,EAAE;AACLD,uBAAS,EAAE,QADN;AAELE,+BAAiB,EAAE,CAAC;AAFf;AAnBF;AADM,SAAf;AA2BAzE,eAAO,CAAC0E,2BAAR,GAAsCzO,SAAtC,CAAgD,UAAAC,IAAI,EAAG;AACrD,cAAImL,KAAK,GAAe,IAAI5C,KAAJ,EAAxB;AACAvI,cAAI,CAACmB,OAAL,CAAa,UAAAC,UAAU,EAAG;AACxB+J,iBAAK,CAAC1F,IAAN,CAAW;AAACoI,mBAAK,EAAEzM,UAAU,CAACsB,GAAnB;AAAwB6G,mBAAK,EAAEnI,UAAU,CAACA;AAA1C,aAAX;AACD,WAFD;AAGA,iBAAI,CAACpB,IAAL,CAAU,CAAV,EAAaiN,MAAb,GAAsB9B,KAAtB;AACA3K,iBAAO,CAACC,GAAR,CAAY,OAAI,CAACT,IAAjB;AACA,iBAAI,CAACkN,YAAL,GAAoB,IAApB;AACD,SARD;AASD;;;;mCAEO,CACP;;;;;;;uBAnDUH,yB,EAAyB,qI;AAAA,K;;;YAAzBA,yB;AAAyB,6C;AAAA,c;AAAA,a;AAAA,yG;AAAA;AAAA;ACRtC;;AACA;;AAA0D;;AAAgC;;AAC1F;;AACA;;;;AAFuB;;AAAA;;AAEiB;;AAAA;;;;;;;;;sEDK3BA,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACTnO,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK2B,Q;;;;;;;;;;;;;;;;;;;;;;AERtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGA;;;;;;AAAM,6FAAmB,MAAnB,EAAmB,YAAnB;;;;;;;;;;QDAA8B,U;;;;QAUO6N,iB;;;AAKX,iCAAY3E,OAAZ,EAAmC;AAAA;;AAAA;;AAHnC,aAAA9J,IAAA,GAAY,EAAZ;AAIE,aAAKkN,YAAL,GAAoB,KAApB;AACA,aAAK7D,OAAL,GAAe;AACb8D,eAAK,EAAE;AACLC,gBAAI,EAAE,UADD;AAELC,kBAAM,EAAE,GAFH;AAGLM,aAAC,EAAE,WAAUC,CAAV,EAAa;AACd,qBAAOA,CAAC,CAACZ,GAAT;AACD,aALI;AAMLc,aAAC,EAAE,WAAUF,CAAV,EAAa;AACd,qBAAOA,CAAC,CAACE,CAAT;AACD,aARI;AASLY,sBAAU,EAAE,IATP;AAULP,oBAAQ,EAAE,GAVL;AAWLQ,0BAAc,EAAE,IAXX;AAYLC,8BAAkB,EAAE,IAZf;AAaLC,kBAAM,EAAE;AACNvB,oBAAM,EAAE;AACNC,mBAAG,EAAE,CADC;AAENC,qBAAK,EAAE,EAFD;AAGNC,sBAAM,EAAE,CAHF;AAINC,oBAAI,EAAE;AAJA;AADF;AAbH;AADM,SAAf;AAyBA,aAAK1N,IAAL,GAAY,IAAIuI,KAAJ,EAAZ;AACAuB,eAAO,CAACgF,wBAAR,GAAmC/O,SAAnC,CAA6C,UAAAC,IAAI,EAAG;AAClDA,cAAI,CAACmB,OAAL,CAAa,UAAAC,UAAU,EAAG;AACxBZ,mBAAO,CAACC,GAAR,CAAYW,UAAZ;AACAZ,mBAAO,CAACC,GAAR,CAAY;AAACuM,iBAAG,EAAE5L,UAAU,CAACsB,GAAjB;AAAsBoL,eAAC,EAAE1M,UAAU,CAACA;AAApC,aAAZ;;AACA,mBAAI,CAACpB,IAAL,CAAUyF,IAAV,CAAe;AAACuH,iBAAG,EAAE5L,UAAU,CAACsB,GAAjB;AAAsBoL,eAAC,EAAE1M,UAAU,CAACA;AAApC,aAAf;AACD,WAJD;AAMA,iBAAI,CAAC8L,YAAL,GAAoB,IAApB;AACD,SARD,EA5BiC,CAqCjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;;mCAEO,CACP;;;;;;;uBA3DUuB,iB,EAAiB,qI;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,c;AAAA,a;AAAA,yG;AAAA;AAAA;ACb9B;;AACA;;AAA0D;;AAAwB;;AAClF;;AACA;;;;AAFuB;;AAAA;;AAEiB;;AAAA;;;;;;;;;sEDU3BA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT7P,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;AEb9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;AACA;;AACE;;AAAG;;AAAc;;AACnB;;;;QDHaiQ,mB;;;AACX,mCAAmB3P,IAAnB,EAAsC;AAAA;;AAAnB,aAAAA,IAAA,GAAAA,IAAA;AAClB;;;;mCAEO,CACP;;;;;;;uBALU2P,mB,EAAmB,mI;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,c;AAAA,a;AAAA,wD;AAAA;AAAA;ACThC;;AAUA;;;;AAVK;;AAUA;;AAAA;;;;;;;;;sEDDQA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTnQ,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;AEThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AACE;;AACE;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AACA;;AAEF;;AACF;;;;;;;;;;;;;AACA;;AACE;;AACA;;AAAsE;;AAAe;;AACvF;;;;AADyB;;AAAA;;;;QDhBZkQ,c;;;AAEX,8BAAmB5P,IAAnB,EAAsC;AAAA;;AAAnB,aAAAA,IAAA,GAAAA,IAAA;AADnB,aAAA6P,UAAA,GAA4B,EAA5B;AACyC;;;;mCAEjC;AAAA;;AACN,eAAK7P,IAAL,CAAU8P,WAAV,GAAwBnP,SAAxB,CAAkC,UAAAC,IAAI,EAAI;AACxCA,gBAAI,CAACmB,OAAL,CAAa,UAAAgO,IAAI,EAAI;AACnB,qBAAI,CAAC7N,MAAL,CAAY6N,IAAI,CAACzH,QAAjB,EAA0ByH,IAAI,CAAC7H,KAA/B,EAAqC6H,IAAI,CAACxH,IAA1C,EAA+CwH,IAAI,CAACvH,UAApD;AACD,aAFD;AAGD,WAJD;AAKD;;;+BAEMwH,Q,EAAUxD,S,EAAWyD,Q,EAAUC,c,EAAgB;AACpD,cAAI1N,KAAK,GAAwCH,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAjD;AACA,cAAImB,MAAM,GAAGjB,KAAK,CAACkB,SAAN,CAAgB,CAAC,CAAjB,CAAb;AAEA,cAAIC,SAAS,GAAGF,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIC,SAAS,GAAGJ,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIE,SAAS,GAAGL,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AACA,cAAIG,SAAS,GAAGN,MAAM,CAACG,UAAP,CAAkB,CAAlB,CAAhB;AAEAD,mBAAS,CAAChB,SAAV,GAAsBqN,QAAtB;AACAnM,mBAAS,CAAClB,SAAV,GAAsB6J,SAAtB;AACA1I,mBAAS,CAACnB,SAAV,GAAsBsN,QAAtB;AACAlM,mBAAS,CAACpB,SAAV,GAAsBuN,cAAtB;AACD;;;;;;;uBAzBUN,c,EAAc,mI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,sQ;AAAA;AAAA;ACR3B;;AAsBA;;;;AAtBgC;;AAsB3B;;AAAA;;;;;;;;;sEDdQA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTpQ,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;AER3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyQ,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,EACGC,KADH,CACS,UAAAC,GAAG;AAAA,aAAInP,OAAO,CAACoP,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport {HomePageComponent} from './pages/home-page/home-page.component';\r\nimport {LoginPageComponent} from './pages/login-page/login-page.component';\r\nimport { RegisterPageComponent } from \"./pages/register-page/register-page.component\";\r\nimport { ForumsComponent } from \"./forums/forums.component\";\r\nimport { MyZoneComponent } from \"./my-zone/my-zone.component\";\r\nimport { PostsComponent } from \"./posts/posts.component\";\r\nimport { UsersComponent } from \"./users/users.component\";\r\nimport { StatisticsComponent } from \"./statistics/statistics.component\";\r\nimport { ForumsCreateComponent } from \"./forums/forums-create/forums-create.component\";\r\nimport { ForumsUpdateComponent } from \"./forums/forums-update/forums-update.component\";\r\nimport { PostsCreateComponent } from \"./posts/posts-create/posts-create.component\";\r\nimport { PostsUpdateComponent } from \"./posts/posts-update/posts-update.component\";\r\nimport { MeetPlaceComponent } from \"./meet-place/meet-place.component\";\r\nimport {MeetPlaceCreateComponent} from \"./meet-place/meet-place-create/meet-place-create.component\";\r\nimport { MeetPlaceUpdateComponent} from \"./meet-place/meet-place-update/meet-place-update.component\";\r\nimport {AuthGuard} from \"./guards/auth.guard\";\r\nimport {D3Service} from \"d3-ng2-service\";\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomePageComponent },\r\n  { path: 'login', component: LoginPageComponent },\r\n  { path: 'register', component: RegisterPageComponent },\r\n  { path: 'forums', component: ForumsComponent, canActivate: [AuthGuard] },\r\n  { path: 'forums/create', component: ForumsCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'forums/update', component: ForumsUpdateComponent, canActivate: [AuthGuard] },\r\n  { path: 'posts', component: PostsComponent, canActivate: [AuthGuard] },\r\n  { path: 'posts/create', component: PostsCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'posts/update', component: PostsUpdateComponent, canActivate: [AuthGuard] },\r\n  { path: 'myZone', component: MyZoneComponent, canActivate: [AuthGuard] },\r\n  { path: 'users', component: UsersComponent, canActivate: [AuthGuard] },\r\n  { path: 'statistics', component: StatisticsComponent, canActivate: [AuthGuard] },\r\n  { path: 'meetPlaces', component: MeetPlaceComponent, canActivate: [AuthGuard] },\r\n  { path: 'meetPlaces/create', component: MeetPlaceCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'meetPlaces/update', component: MeetPlaceUpdateComponent, canActivate: [AuthGuard] }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule, RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit  {\r\n  constructor() {\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<html>\r\n  <body>\r\n    <app-navbar></app-navbar>\r\n    <router-outlet></router-outlet>\r\n  </body>\r\n</html>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule} from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport 'd3';\r\nimport 'nvd3'\r\nimport {NvD3Module} from \"ng2-nvd3\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { ForumsComponent } from './forums/forums.component';\r\nimport { MyZoneComponent } from './my-zone/my-zone.component';\r\nimport { HomePageComponent } from './pages/home-page/home-page.component';\r\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { PostsComponent } from './posts/posts.component';\r\nimport { RegisterPageComponent } from './pages/register-page/register-page.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { StatisticsComponent } from './statistics/statistics.component';\r\nimport { ForumsCreateComponent } from './forums/forums-create/forums-create.component';\r\nimport { ForumsUpdateComponent } from './forums/forums-update/forums-update.component';\r\nimport { PostsCreateComponent } from './posts/posts-create/posts-create.component';\r\nimport { PostsUpdateComponent } from './posts/posts-update/posts-update.component';\r\nimport { MeetPlaceComponent } from './meet-place/meet-place.component';\r\nimport { MeetPlaceCreateComponent } from './meet-place/meet-place-create/meet-place-create.component';\r\nimport { MeetPlaceUpdateComponent } from './meet-place/meet-place-update/meet-place-update.component';\r\nimport { AgmCoreModule} from '@agm/core';\nimport { PieChartComponent } from './statistics/pie-chart/pie-chart.component';\nimport { DiscreteBarChartComponent } from './statistics/discrete-bar-chart/discrete-bar-chart.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    ForumsComponent,\r\n    MyZoneComponent,\r\n    HomePageComponent,\r\n    LoginPageComponent,\r\n    PostsComponent,\r\n    RegisterPageComponent,\r\n    UsersComponent,\r\n    StatisticsComponent,\r\n    ForumsCreateComponent,\r\n    ForumsUpdateComponent,\r\n    PostsCreateComponent,\r\n    PostsUpdateComponent,\r\n    MeetPlaceComponent,\r\n    MeetPlaceCreateComponent,\r\n    MeetPlaceUpdateComponent,\r\n    PieChartComponent,\r\n    DiscreteBarChartComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NvD3Module,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyAZZ9aZlzB6HrnlFffFzRGGTFJBSetevpk'\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n\r\n})\r\nexport class AppModule { }\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from \"../../services/auth.service\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ForumService} from \"../../services/forum.service\";\r\n\r\n@Component({\r\n  selector: 'app-forums-create',\r\n  templateUrl: './forums-create.component.html',\r\n  styleUrls: ['./forums-create.component.css']\r\n})\r\nexport class ForumsCreateComponent implements OnInit {\r\n  forum: any = {\r\n    forumName: '',\r\n    forumId: ''\r\n  };\r\n  returnURL: string;\r\n  constructor(public auth: AuthService, public forumSer: ForumService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.returnURL = this.route.snapshot.queryParams['returnUrl'] || '/forums';\r\n  }\r\n\r\n  createForum() {\r\n    this.forumSer.createForum(this.forum.forumName).subscribe(data=> {\r\n      if (data['message'] === false) {\r\n        // if invalid login, reset the form\r\n        this.forum.forumName = '';\r\n      } else {\r\n        // if we get here, there is no error, the return is valid\r\n        // Let's first save the info into local storage for later use. We can parse this back\r\n        // into an object later\r\n        localStorage.setItem('currentForum', JSON.stringify(data));\r\n        // route user to the return URL\r\n        this.router.navigateByUrl(this.returnURL);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"form-container\" *ngIf=\"auth.isLoggedIn() && auth.isUserAdmin()\">\r\n  <form name=\"form\" class=\"loginForm\" (ngSubmit)=\"f.form.valid && createForum()\" #f=\"ngForm\" novalidate>\r\n    <div class=\"form-group\">\r\n      <h2>New Forum</h2>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Forum Name</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"forumName\" [(ngModel)]=\"forum.forumName\" required>\r\n    </div>\r\n    <br/>\r\n    <button class=\"btn login\" type=\"submit\">Submit</button>\r\n    <br/>\r\n    <button class=\"btn login\" routerLink=\"/forums\">Cancel</button>\r\n  </form>\r\n</div>\r\n<div *ngIf=\"!auth.isLoggedIn()\">\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> Not Logged In! </div>\r\n</div>\r\n<div *ngIf=\"auth.isLoggedIn() && !auth.isUserAdmin()\">\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> You are not an admin! </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from \"../../services/auth.service\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ForumService} from \"../../services/forum.service\";\r\n\r\n@Component({\r\n  selector: 'app-forums-update',\r\n  templateUrl: './forums-update.component.html',\r\n  styleUrls: ['./forums-update.component.css']\r\n})\r\nexport class ForumsUpdateComponent implements OnInit {\r\n  forum: any = {\r\n    forumName: '',\r\n    forumId: ''\r\n  };\r\n  returnURL: string;\r\n  constructor(public auth: AuthService, public forumSer: ForumService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.returnURL = this.route.snapshot.queryParams['returnUrl'] || '/forums';\r\n    this.forum.forumName = JSON.parse(localStorage['currentForum'])['forumName'];\r\n    console.log(this.forum.forumName);\r\n    this.forum.forumId = JSON.parse(localStorage['currentForum'])['forumId'];\r\n    console.log(this.forum.forumId);\r\n  }\r\n\r\n  EditForum() {\r\n    this.forumSer.editForum(this.forum.forumName, this.forum.forumId).subscribe(data=> {\r\n      if (data['message'] === false) {\r\n        // if invalid login, reset the form\r\n        this.forum.forumName = '';\r\n        this.forumSer.deactivateForum();\r\n      } else {\r\n        // if we get here, there is no error, the return is valid\r\n        // Let's first save the info into local storage for later use. We can parse this back\r\n        // into an object later\r\n        console.log(\"new currentForum is: \" +  JSON.stringify(data));\r\n        this.forumSer.deactivateForum();\r\n        // route user to the return URL\r\n        this.router.navigateByUrl(this.returnURL);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"form-container\" *ngIf=\"auth.isLoggedIn() && auth.isUserAdmin()\">\r\n  <form name=\"form\" class=\"loginForm\" (ngSubmit)=\"f.form.valid && EditForum()\" #f=\"ngForm\" novalidate>\r\n    <div class=\"form-group\">\r\n      <h2>Edit Forum</h2>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Forum Name</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"forumName\" [(ngModel)]=\"forum.forumName\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Forum Id</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"forumId\" [(ngModel)]=\"forum.forumId\" required disabled>\r\n    </div>\r\n    <br/>\r\n    <button class=\"btn login\" type=\"submit\">Submit</button> <br/>\r\n    <button class=\"btn login\" routerLink=\"/forums\">Cancel</button>\r\n  </form>\r\n</div>\r\n<div *ngIf=\"!auth.isLoggedIn()\">\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> Not Logged In! </div>\r\n</div>\r\n<div *ngIf=\"!auth.isUserAdmin()\">\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> You're not an admin, can't edit forum! </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { AuthService} from \"../services/auth.service\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ForumService } from \"../services/forum.service\";\r\nimport { PostsService } from \"../services/posts.service\";\r\n\r\nclass NumOfPosts {\r\n  _id: string;\r\n  numOfPosts: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-forums',\r\n  templateUrl: './forums.component.html',\r\n  styleUrls: ['./forums.component.css']\r\n})\r\n\r\nexport class ForumsComponent implements OnInit {\r\n  numOfRows: number;\r\n  returnURL: string;\r\n  constructor(public auth: AuthService, public forumSer: ForumService, public postsSer: PostsService, private router: Router, private route: ActivatedRoute) { }\r\n  ngOnInit(): void {\r\n    this.numOfRows = 1;\r\n    this.returnURL = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n    this.postsSer.groupByForumIdAndCount().subscribe(data=> {\r\n      this.forumSer.getAllForums().subscribe(forums=> {\r\n        forums.forEach(forum => {\r\n          console.log(data);\r\n          var numOfPosts = this.getNumOfPosts(forum.forumId, data);\r\n          this.addRow(forum.forumName, forum.forumId, numOfPosts, forum.numTimesWatched);\r\n          var currentRow = this.numOfRows;\r\n          var router = this.router;\r\n          var forumSer = this.forumSer;\r\n          //adding listeners for \"edit btns\"\r\n          document.getElementById('editBtn_' + currentRow).addEventListener('click', function() {\r\n            var table: HTMLTableElement = <HTMLTableElement> document.getElementById(\"myTableForums\");\r\n            var rows = table.rows;\r\n            var forumId = rows[currentRow].cells[1].innerText;\r\n            console.log(forumId);\r\n            var forumName = rows[currentRow].cells[0].innerText;\r\n            console.log(forumName);\r\n            var forumNumTimesWatched = rows[currentRow].cells[3].innerText;\r\n            console.log(forumNumTimesWatched);\r\n\r\n            var activeForum = {\r\n              forumName: forumName,\r\n              forumId: forumId,\r\n              numTimesWatched: parseInt(forumNumTimesWatched)\r\n            };\r\n\r\n            console.log(JSON.stringify(activeForum));\r\n            forumSer.setActiveForum(activeForum);\r\n            router.navigate(['/forums/update']);\r\n          });\r\n\r\n          //adding listeners for \"activate btns\"\r\n          document.getElementById('activateBtn_' + currentRow).addEventListener('click', function() {\r\n            var table: HTMLTableElement = <HTMLTableElement> document.getElementById(\"myTableForums\");\r\n            var rows = table.rows;\r\n            var forumId = rows[currentRow].cells[1].innerText;\r\n            console.log(forumId);\r\n            var forumName = rows[currentRow].cells[0].innerText;\r\n            console.log(forumName);\r\n            var forumNumTimesWatched = rows[currentRow].cells[3].innerText;\r\n            console.log(forumNumTimesWatched);\r\n\r\n            var activeForum = {\r\n              forumName: forumName,\r\n              forumId: forumId,\r\n              numTimesWatched: parseInt(forumNumTimesWatched)\r\n            };\r\n\r\n            console.log(JSON.stringify(activeForum));\r\n            forumSer.setActiveForum(activeForum);\r\n            forumSer.incNumTimesWatched(forumId, forumName).subscribe(data=> {\r\n              if (data['message'] === true) {\r\n                console.log(\"incremented\");\r\n                var numTimesWatched = data[\"numTimesWatched\"];\r\n              }\r\n              else {\r\n                console.log(\"err\");\r\n              }\r\n            });\r\n            router.navigate(['/posts']);\r\n          });\r\n          this.numOfRows += 1;\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  getNumOfPosts(currentForumId: string, numOfPostsArr: NumOfPosts[]) {\r\n    for (var i = 0; i<numOfPostsArr.length; i++) {\r\n      if (numOfPostsArr[i]._id === currentForumId) {\r\n        return numOfPostsArr[i].numOfPosts;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  addRow(forumsName, forumId, numberOfPosts, numTimesWatched) {\r\n    var table: HTMLTableElement = <HTMLTableElement> document.getElementById(\"myTableForums\");\r\n    var newRow = table.insertRow(this.numOfRows);\r\n\r\n    var newCell_0 = newRow.insertCell(0);\r\n    var newCell_1 = newRow.insertCell(1);\r\n    var newCell_2 = newRow.insertCell(2);\r\n    var newCell_3 = newRow.insertCell(3);\r\n    var newCell_4 = newRow.insertCell(4);\r\n\r\n    newCell_0.innerText = forumsName;\r\n    newCell_1.innerText = forumId;\r\n    newCell_2.innerText = numberOfPosts;\r\n    newCell_3.innerText = numTimesWatched;\r\n\r\n    var editBtnId = 'editBtn_' + this.numOfRows;\r\n    var activateBtnId = 'activateBtn_' + this.numOfRows;\r\n\r\n    var isEnabled = this.auth.isUserAdmin();\r\n    if (isEnabled) {\r\n      var newCell_innerHtml = \"<button class='btn btn-primary' id=\" + editBtnId + \"> Edit Forum </button> \" +\r\n        \"<button class='btn btn-primary' id=\" + activateBtnId + \"> Go to Forum </button>\";\r\n    }\r\n    else {\r\n      var newCell_innerHtml = \"<button class='btn btn-primary' id=\" + editBtnId + \" disabled> Edit Forum </button> \" +\r\n        \"<button class='btn btn-primary' id=\" + activateBtnId + \"> Go to Forum </button>\";\r\n    }\r\n    newCell_4.innerHTML = newCell_innerHtml;\r\n\r\n  }\r\n}\r\n\r\n","<div class=\"myTable rounded-lg\"  [ngStyle]=\"{textAlign: 'center'}\" *ngIf=\"auth.isLoggedIn()\">\r\n  <button class=\"btn btn-primary\" id=\"createForumBtn\" routerLink=\"/forums/create\" *ngIf=\"auth.isUserAdmin()\"> New Forum </button>\r\n  <br/><br/>\r\n  <table class=\"table table-hover shadow-lg rounded-lg\" id=\"myTableForums\">\r\n    <thead class=\"thead-dark\">\r\n    <tr>\r\n      <th class=\"width-sm\">\r\n        Full Name\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        Forum Id\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        Number Of Posts\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        Number of Times Watched\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        Actions\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody id=\"myTableForumsD\">\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<div *ngIf=\"!auth.isLoggedIn()\">\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> Not Logged In! </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router) {\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    // Check if a 'currentUser' exists in the localStorage object\r\n    // this will return undefined || false if there isn't\r\n    if (localStorage['currentUsr']) {\r\n      // User is logged in, let's let them through\r\n      return true;\r\n    } else {\r\n      // user is not logged in, let's route them to the login page.\r\n      // We will import the Router from @angular/router and assign it in the consructor\r\n      // then we route the user to the login page and pass parameters with the returnURL\r\n      // So we can return to the requested page after login.\r\n      this.router.navigate(['/login'], {queryParams: { returnUrl: state.url }});\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from \"../../services/auth.service\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MeetPlaceService} from \"../../services/meet-place.service\";\r\nimport {ForumService} from \"../../services/forum.service\";\r\n\r\n@Component({\r\n  selector: 'app-meet-place-create',\r\n  templateUrl: './meet-place-create.component.html',\r\n  styleUrls: ['./meet-place-create.component.css']\r\n})\r\nexport class MeetPlaceCreateComponent implements OnInit {\r\n  meetPlace: any = {\r\n    meetPlaceName: '',\r\n    meetPlaceType: '',\r\n    meetPlaceLocation: ''\r\n  };\r\n  returnURL: string;\r\n  constructor(public auth: AuthService, public meetPlaceSer: MeetPlaceService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.returnURL = this.route.snapshot.queryParams['returnUrl'] || '/meetPlaces';\r\n  }\r\n\r\n  createMeetPlace() {\r\n    this.meetPlaceSer.createMeetPlace(this.meetPlace.meetPlaceName, this.meetPlace.meetPlaceType, this.meetPlace.meetPlaceLocation).subscribe(data => {\r\n      if (data['message'] === false) {\r\n        // if invalid login, reset the form\r\n        this.meetPlace.meetPlaceName = '';\r\n        this.meetPlace.meetPlaceType = '';\r\n        this.meetPlace.meetPlaceLocation = '';\r\n      } else {\r\n        localStorage.setItem('currentMeetPlace', JSON.stringify(data));\r\n        // route user to the return URL\r\n        this.router.navigateByUrl(this.returnURL);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"form-container\" *ngIf=\"auth.isLoggedIn()\">\r\n  <form name=\"form\" class=\"loginForm\" (ngSubmit)=\"f.form.valid && createMeetPlace()\" #f=\"ngForm\" novalidate>\r\n    <div class=\"form-group\">\r\n      <h2>New Meet Place</h2>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Meet Place Name</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"meetPlaceName\" [(ngModel)]=\"meetPlace.meetPlaceName\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Meet Place Type</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"meetPlaceType\" [(ngModel)]=\"meetPlace.meetPlaceType\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Meet Place Location</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"meetPlaceLocation\" [(ngModel)]=\"meetPlace.meetPlaceLocation\" required>\r\n    </div>\r\n    <br/>\r\n    <button class=\"btn login\" type=\"submit\">Submit</button>\r\n    <br/>\r\n    <button class=\"btn login\" routerLink=\"/meetPlaces\">Cancel</button>\r\n  </form>\r\n</div>\r\n<div *ngIf=\"!auth.isLoggedIn()\">\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> Not Logged In! </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from \"../../services/auth.service\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {MeetPlaceService} from \"../../services/meet-place.service\";\r\nimport {ForumService} from \"../../services/forum.service\";\r\n\r\n@Component({\r\n  selector: 'app-meet-place-update',\r\n  templateUrl: './meet-place-update.component.html',\r\n  styleUrls: ['./meet-place-update.component.css']\r\n})\r\nexport class MeetPlaceUpdateComponent implements OnInit {\r\n  meetPlace: any = {\r\n    meetPlaceName: '',\r\n    meetPlaceType: '',\r\n    meetPlaceLocation: ''\r\n  };\r\n  returnURL: string;\r\n  constructor(public auth: AuthService, public meetPlacesSer: MeetPlaceService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.returnURL = this.route.snapshot.queryParams['returnUrl'] || '/meetPlaces';\r\n    this.meetPlace.meetPlaceName = JSON.parse(localStorage['currentMeetPlace'])['meetPlaceName'];\r\n    console.log(this.meetPlace.meetPlaceName);\r\n    this.meetPlace.meetPlaceType = JSON.parse(localStorage['currentMeetPlace'])['meetPlaceType'];\r\n    console.log(this.meetPlace.meetPlaceType);\r\n    this.meetPlace.meetPlaceLocation = JSON.parse(localStorage['currentMeetPlace'])['meetPlaceLocation'];\r\n    console.log(this.meetPlace.meetPlaceLocation);\r\n  }\r\n\r\n  EditMeetPlace() {\r\n    this.meetPlacesSer.editMeetPlace(this.meetPlace.meetPlaceName, this.meetPlace.meetPlaceType, this.meetPlace.meetPlaceLocation).subscribe(data=> {\r\n      if (data['message'] === false) {\r\n        // if invalid login, reset the form\r\n        this.meetPlace.meetPlaceName = '';\r\n        this.meetPlace.meetPlaceType = '';\r\n        this.meetPlace.meetPlaceLocation = '';\r\n        this.meetPlace.deactivateForum();\r\n      }\r\n      else {\r\n        this.meetPlacesSer.deactivateMeetPlace();\r\n        // route user to the return URL\r\n        this.router.navigateByUrl(this.returnURL);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"form-container\" *ngIf=\"auth.isLoggedIn()\">\r\n  <form name=\"form\" class=\"loginForm\" (ngSubmit)=\"f.form.valid && EditMeetPlace()\" #f=\"ngForm\" novalidate>\r\n    <div class=\"form-group\">\r\n      <h2>Edit Meet Place</h2>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Meet Place Name</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"meetPlaceName\" [(ngModel)]=\"meetPlace.meetPlaceName\" required disabled>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Meet Place Type</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"meetPlaceType\" [(ngModel)]=\"meetPlace.meetPlaceType\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Meet Place Location</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"meetPlaceLocation\" [(ngModel)]=\"meetPlace.meetPlaceLocation\" required>\r\n    </div>\r\n    <br/>\r\n    <button class=\"btn login\" type=\"submit\">Submit</button> <br/>\r\n    <button class=\"btn login\" routerLink=\"/meetPlaces\">Cancel</button>\r\n  </form>\r\n</div>\r\n<div *ngIf=\"!auth.isLoggedIn()\">\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> Not Logged In! </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from \"../services/auth.service\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MeetPlaceService } from \"../services/meet-place.service\";\r\nimport { HttpParameterCodec } from \"@angular/common/http\";\r\n\r\nclass Position {\r\n  latitude: number;\r\n  longitude: number;\r\n\r\n  constructor(latitude, longitude) {\r\n    this.latitude = latitude;\r\n    this.longitude = longitude;\r\n  }\r\n}\r\n\r\nimport {AgmCoreModule} from '@agm/core';\r\nimport {google} from \"@agm/core/services/google-maps-types\";\r\n\r\n@Component({\r\n  selector: 'app-meet-place',\r\n  templateUrl: './meet-place.component.html',\r\n  styleUrls: ['./meet-place.component.css']\r\n})\r\nexport class MeetPlaceComponent implements OnInit {\r\n  public positions = [new Position(51.017467, 10.233982)]; // static point for debug\r\n\r\n  meetPlace:any = {\r\n    meetPlaceName: '',\r\n    meetPlaceType: '',\r\n    meetPlaceLocation: ''\r\n  };\r\n  numOfRows: number;\r\n  returnURL: string;\r\n  showSearchForm: boolean;\r\n  errorMessage:string = '';\r\n\r\n  constructor(public auth: AuthService, public meetPlaceSer: MeetPlaceService, private router: Router,\r\n               private route: ActivatedRoute, private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.showSearchForm = false;\r\n    this.numOfRows = 1;\r\n    this.returnURL = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n    this.drawTable();\r\n    this.getPositions();\r\n  }\r\n\r\n  getPositions() {\r\n    this.meetPlaceSer.getAllMeetPlaces().subscribe(data=> {\r\n      data.forEach(meetPlace=> {\r\n        var meetPlaceLocation = meetPlace.meetPlaceLocation;\r\n        console.log(\"meetPlaceLocation: \" + meetPlaceLocation);\r\n        this.http.get('https://maps.googleapis.com/maps/api/geocode/json?address=' + encodeURI(meetPlaceLocation) +'&key=AIzaSyCQPe2NpmzkQ5Ox2UNUBPMVzX3ds-psSVQ').subscribe(data=>{\r\n          var latitude = data['results'][0]['geometry']['location']['lat'];\r\n          var longitude = data['results'][0]['geometry']['location']['lng'];\r\n          console.log(\"latitude is: \" + latitude);\r\n          console.log(\"longitude is: \" + longitude);\r\n          this.positions.push(new Position(latitude, longitude));\r\n        });\r\n      });\r\n      console.log(this.positions);\r\n    });\r\n  }\r\n\r\n  drawTable() {\r\n    this.meetPlaceSer.getAllMeetPlaces().subscribe(data=> {\r\n      data.forEach(meetPlace=> {\r\n        this.addRow(meetPlace.meetPlaceName, meetPlace.meetPlaceType, meetPlace.meetPlaceLocation);\r\n        var currentRow = this.numOfRows;\r\n        var router = this.router;\r\n        var meetPlaceSer = this.meetPlaceSer;\r\n\r\n        //adding listeners for \"edit btns\"\r\n        document.getElementById('editBtn_' + currentRow).addEventListener('click', function() {\r\n          var table: HTMLTableElement = <HTMLTableElement> document.getElementById(\"myMeetPlacesTable\");\r\n          var rows = table.rows;\r\n          var meetPlaceName = rows[currentRow].cells[0].innerText;\r\n          console.log(meetPlaceName);\r\n          var meetPlaceType = rows[currentRow].cells[1].innerText;\r\n          console.log(meetPlaceType);\r\n          var meetPlaceLocation = rows[currentRow].cells[2].innerText;\r\n          console.log(meetPlaceLocation);\r\n\r\n          var activeMeetPlace = {\r\n            meetPlaceName: meetPlaceName,\r\n            meetPlaceType: meetPlaceType,\r\n            meetPlaceLocation: meetPlaceLocation,\r\n          };\r\n\r\n          console.log(JSON.stringify(activeMeetPlace));\r\n          meetPlaceSer.setActiveMeetPlace(activeMeetPlace);\r\n          router.navigate(['/meetPlaces/update']);\r\n        });\r\n        this.numOfRows += 1;\r\n      });\r\n    });\r\n  }\r\n\r\n  searchMeetPlace() {\r\n    if (this.meetPlace.meetPlaceName === '' && this.meetPlace.meetPlaceType === '' && this.meetPlace.meetPlaceLocation === '') {\r\n      this.errorMessage = \"All Rows are Empty\"!\r\n    }\r\n    else {\r\n      this.meetPlaceSer.searchMeetPlace(this.meetPlace.meetPlaceName, this.meetPlace.meetPlaceType, this.meetPlace.meetPlaceLocation).subscribe(data=>{\r\n        this.deleteTable();\r\n        this.errorMessage = '';\r\n        data.forEach(meetPlace=> {\r\n          this.addRow(meetPlace.meetPlaceName, meetPlace.meetPlaceType, meetPlace.meetPlaceLocation);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  showSearchFormFunc() {\r\n    this.showSearchForm = !this.showSearchForm;\r\n    if (this.showSearchForm === false) {\r\n      this.errorMessage = \"\";\r\n    }\r\n  }\r\n\r\n  cancelSearch() {\r\n    this.showSearchForm = false;\r\n    this.errorMessage = \"\";\r\n    this.deleteTable();\r\n    this.drawTable();\r\n  }\r\n\r\n  deleteTable() {\r\n    var table: HTMLTableElement = <HTMLTableElement> document.getElementById(\"myMeetPlacesTable\");\r\n    while(table.rows.length > 1) {\r\n      table.deleteRow(-1);\r\n    }\r\n    this.numOfRows = 1;\r\n  }\r\n\r\n  addRow(meetPlaceName, meetPlaceType, meetPlaceLocation) {\r\n    var table: HTMLTableElement = <HTMLTableElement> document.getElementById(\"myMeetPlacesTable\");\r\n    var newRow = table.insertRow(this.numOfRows);\r\n\r\n    var newCell_0 = newRow.insertCell(0);\r\n    var newCell_1 = newRow.insertCell(1);\r\n    var newCell_2 = newRow.insertCell(2);\r\n    var newCell_3 = newRow.insertCell(3);\r\n\r\n    newCell_0.innerText = meetPlaceName;\r\n    newCell_1.innerText = meetPlaceType;\r\n    newCell_2.innerText = meetPlaceLocation;\r\n\r\n    var editBtnId = 'editBtn_' + this.numOfRows;\r\n    var newCell_innerHtml = \"<button class='btn btn-primary' id=\" + editBtnId + \"> Edit Meet Place </button> \";\r\n    newCell_3.innerHTML = newCell_innerHtml;\r\n  }\r\n\r\n  // GOOGLE MAPS\r\n  latitude =32.074109;\r\n  longitude=34.782827;\r\n  onChooseLocation (event)\r\n  {\r\n    this.latitude= event.coords.lat;\r\n    this.longitude=event.coords.lng;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-sm-9\" *ngIf=\"auth.isLoggedIn()\">\r\n    <div class=\"myTable rounded-lg\"  [ngStyle]=\"{textAlign: 'center'}\">\r\n      <button class=\"btn btn-primary\" id=\"createMeetPlaceBtn\" routerLink=\"/meetPlaces/create\"> New Meet Place </button>\r\n      <br/><br/>\r\n      <button class=\"btn btn-primary\" id=\"openSearchMeetPlacesBtn\" (click)=\"showSearchFormFunc()\"> Search Meet Places </button>\r\n      <br/><br/>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-4 offset-sm-4\">\r\n          <div id=\"searchForm\" *ngIf=\"showSearchForm\" [ngStyle]=\"{textAlign: 'center', width: '350px'}\">\r\n            <form name=\"form\" class=\"loginForm\" (ngSubmit)=\"searchMeetPlace()\" #f=\"ngForm\" novalidate>\r\n              <div class=\"form-group\">\r\n                <label>Meet Place Name</label>\r\n                <input class=\"form-control\" type=\"text\" name=\"meetPlaceName\" [(ngModel)]=\"meetPlace.meetPlaceName\" required>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>Meet Place Type</label>\r\n                <input class=\"form-control\" type=\"text\" name=\"meetPlaceType\" [(ngModel)]=\"meetPlace.meetPlaceType\" required>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label>Meet Place Location</label>\r\n                <input class=\"form-control\" type=\"text\" name=\"meetPlaceLocation\" [(ngModel)]=\"meetPlace.meetPlaceLocation\" required>\r\n              </div>\r\n              <br/>\r\n              <p [ngStyle]=\"{color: 'red'}\"> {{errorMessage}}</p>\r\n              <button class=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form>\r\n            <button class=\"btn btn-primary\" (click)=\"cancelSearch()\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br/><br/>\r\n      <table class=\"table table-hover shadow-lg rounded-lg\" id=\"myMeetPlacesTable\">\r\n        <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th class=\"width-sm\">\r\n            Meet Place Mame\r\n          </th>\r\n          <th class=\"width-sm\">\r\n            Meet Place Type\r\n          </th>\r\n          <th class=\"width-sm\">\r\n            Meet Place Location\r\n          </th>\r\n          <th class=\"width-sm\">\r\n            Actions\r\n          </th>\r\n        </tr>\r\n        </thead>\r\n        <tbody id=\"myTableForumsD\">\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-sm-3\" *ngIf=\"auth.isLoggedIn()\" id=\"mapDiv\">\r\n    <agm-map id=\"agmMap\" [latitude]=\"latitude\" [longitude]=\"longitude\" (mapClick)=\"onChooseLocation($event)\">\r\n      <agm-marker *ngFor=\"let position of positions\" [latitude]=\"position.latitude\" [longitude]=\"position.longitude\"> </agm-marker>\r\n    </agm-map>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"!auth.isLoggedIn()\" >\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> Not Logged In! </div>\r\n</div>\r\n\r\n\r\n<!--a map that i created manually-->\r\n<!--<iframe src=\"https://www.google.co.il/maps/d/u/0/embed?mid=1x7oFB_7TBmtF0iFhGrdVBt659_RReKUr\" width=\"640\" height=\"480\"></iframe>-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from \"../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-my-zone',\r\n  templateUrl: './my-zone.component.html',\r\n  styleUrls: ['./my-zone.component.css']\r\n})\r\nexport class MyZoneComponent implements OnInit {\r\n  myDetails:any = {\r\n    myEmail: this.auth.getUserEmail(),\r\n    myFullName: this.auth.getUserFullName(),\r\n    myProfession: this.auth.getUserProfession(),\r\n    myCity: this.auth.getUserCity()\r\n  };\r\n  constructor(public auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n\r\n\r\n","<div *ngIf=\"auth.isLoggedIn()\" [ngStyle]=\"{textAlign: 'center'}\" id=\"myZone\" xmlns=\"http://www.w3.org/1999/html\">\r\n  <div class=\"display-4\"> My Email: </div>\r\n  <div class=\"details\"> {{myDetails.myEmail}} <br/> <br/> </div>\r\n\r\n  <div class=\"display-4\"> My Full Name: </div>\r\n  <div class=\"details\"> {{myDetails.myFullName}} <br/> <br/> </div>\r\n\r\n  <div class=\"display-4\"> My Profession: </div>\r\n  <div class=\"details\"> {{myDetails.myProfession}} <br/> <br/> </div>\r\n\r\n  <div class=\"display-4\"> My City: </div>\r\n  <div class=\"details\"> {{myDetails.myCity}} </div>\r\n\r\n  <br/>\r\n\r\n  <aside>\r\n    <p>Don’t take your Profile for granted.</p>\r\n  </aside>\r\n<p>Make the most of your portfolio of qualifications and credentials by posting them on your profile. However, keep your information job-related and not personal, private\r\n  information. With a few exceptions, most writers are private people. Thus, if you value your privacy and have no intentions of giving it up.</p>\r\n\r\n  <canvas id=\"myCanvas\" width=\"200\" height=\"100\" style=\"border:1px solid deepskyblue;\">\r\n    Your browser does not support the HTML5 canvas tag.</canvas>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"!auth.isLoggedIn()\">\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> Not Logged In! </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  primaryDisplayBorderTitle = 'FriendLancer';\r\n  primaryDisplayBorderContent = 'Collaboration Made Easy';\r\n  @Output() showHomePageEmitter = new EventEmitter<boolean>();\r\n  @Output() showForumsEmitter = new EventEmitter<boolean>();\r\n  @Output() showMyZoneEmitter = new EventEmitter<boolean>();\r\n  constructor(public auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div id=\"navbarDiv\">\r\n  <nav class=\"navbar navbar-expand-sm navbar-brown fixed-top\">\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <!--Weather-->\r\n    <a target=\"_blank\" href=\"https://www.booked.net/weather/tel-aviv-18414\"><img src=\"https://w.bookcdn.com/weather/picture/1_18414_1_1_137AE9_160_ffffff_333333_08488D_1_ffffff_333333_0_6.png?scode=124&domid=w209&anc_id=39185\"  alt=\"booked.net\"/></a>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n      <ul class=\"navbar-nav mx-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/forums\">Forums</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/statistics\">Statistics</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/meetPlaces\">Meet Places</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"https://www.facebook.com/FriendLancer-102130368083020\">Facebook</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/myZone\">MyZone</a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\r\n          <a class=\"nav-link\" routerLink=\"/login\" >Log In</a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"!auth.isLoggedIn()\">\r\n          <a class=\"nav-link\" routerLink=\"/register\" >Register</a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"auth.isLoggedIn()\">\r\n          <a class=\"nav-link\" routerLink=\"/users\" >Users</a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"auth.isLoggedIn()\">\r\n          <a class=\"nav-link\" (click)=\"auth.logout()\">Log Out</a>\r\n        </li>\r\n        <li *ngIf=\"auth.isLoggedIn()\">\r\n          Welcome, {{auth.getUserEmail()}}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n</div>\r\n\r\n<div class=\"jumbotron text-center\" id=\"primary_jumbotron_display\">\r\n  <div id=\"primaryDisplayBorder\">\r\n    <br/>\r\n    <br/>\r\n    <br/>\r\n    <br/>\r\n    <div id=\"primaryDisplayContent\">{{primaryDisplayBorderTitle}}</div>\r\n    <p>{{primaryDisplayBorderContent}}</p>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<br/>\r\n\r\n<div [ngStyle]=\"{textAlign: 'center'}\">\r\n  <h3> How to meet new people? Watch me! </h3>\r\n    <script>\r\n            var elem = document.getElementById('myCanvas');\r\n            var ctx = elem.getContext('2d');\r\n            ctx.font = '60px \"Segoe UI\" bold';\r\n            ctx.strokeText(\"How to meet new people? watch me\", 0, 160);\r\n             ctx.restore();\r\n    </script>\r\n      <body [ngStyle]=\"{textAlign: 'center'}\">\r\n               <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/rb0G0Uw-2Q8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n      </body>\r\n </div>\r\n\r\n\r\n\r\n\r\n<div class=\"newspaper\" [ngStyle]=\"{textAlign: 'center'}\">\r\n  <h2>Listen, Young Freelancer! A Freelancer's Guide To Protection From Frauds</h2>\r\n  <body>\r\n  Freelancing is an awesome way of life. That is not because it helps you gain some extra income. Once well-established, it may even help you make a living. You work according to your own schedule at home, even without leaving the bed. You describe your income rates per task. You have the chance of testing your skills that you cannot during your regular working hours. It helps you build your self confidence and fight stress.\r\n\r\n  As this easily whets your appetite, you register to a freelancing site such as freelancer.com and build a profile. You even obtain a couple of certificates and start bidding for projects. However, after a time as a fresh freelancer, you begin to feel upset, and later even frustrated. That is because, the seniors who already have established their businesses here take almost every good project. The clients are overwhelmed by their profiles including a great set of level three certificates and a horde of damn-good reviews accompanied by five stars. The remaining jobs are either taken by other freelancers, or offer too little income for too much work. No need to mention about disencouraging job posts with “US freelancers only”, or “No Indians, please” in the title.\r\n\r\n  And then you receive a message from a client whose project you have just bidden. Gosh! Could it be your first assignment? Could it be the moment that helps you change the history? You dream of gaining income and buying more certificates, and obtaining a horde of damn-good reviews with five stars. You immediately reply the message. However, the client behaves differently than you expect.\r\n\r\n  Days later, you are much more exhausted than you ever have felt. You have been abused and thrown away like a tissue. This was a swindler, and simply used your hope for gaining extra money. You realize that you have made yourself a slave for a so-called client; just as the slave owners once forced people to work on plantations and sold the crops to make money, this swindler used your appetite for money like a whiplash to sell your work.\r\n  </body>\r\n</div>\r\n\r\n\r\n<div class=\"transition\">\r\n  <div> <b>Freelancer, Join us and meet people with the same interest like yours!!</b></div>\r\n</div>\r\n\r\n\r\n\r\n<div>\r\n  <footer>\r\n    <p></p>\r\n    <p>Posted by: Inbar-Nitzan Corporation</p>\r\n    <p>Contact information: <a href=\"mailto:someone@example.com\">Inbar-Nitzan@example.com</a>.</p>\r\n  </footer>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  errorMessage: string = \"\";\r\n  credentials: any = {\r\n    email: '',\r\n    pwd: ''\r\n  };\r\n  returnURL: string;\r\n  constructor(private auth: AuthService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.returnURL = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  login() {\r\n    // We checked for validation in HTML so our credentials should not be blank.\r\n    this.auth.login(this.credentials.email, this.credentials.pwd).subscribe(data => {\r\n      if (data['message'] === false) {\r\n        // if invalid login, reset the form\r\n        this.credentials.email = '';\r\n        this.credentials.pwd = '';\r\n        this.errorMessage = \"User or Password are Incorrect!\";\r\n      } else {\r\n        // if we get here, there is no error, the return is valid\r\n        // Let's first save the info into local storage for later use. We can parse this back\r\n        // into an object later\r\n        localStorage.setItem('currentUsr', JSON.stringify(data));\r\n        // route user to the return URL\r\n        this.router.navigateByUrl(this.returnURL);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"form-container\">\r\n  <form name=\"form\" class=\"loginForm\" (ngSubmit)=\"f.form.valid && login()\" #f=\"ngForm\" novalidate>\r\n    <div class=\"form-group\">\r\n      <h2>User Login</h2>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Email</label>\r\n      <input class=\"form-control\" type=\"email\" name=\"email\" [(ngModel)]=\"credentials.email\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input class=\"form-control\" type=\"password\" name=\"pwd\" [(ngModel)]=\"credentials.pwd\" required>\r\n    </div>\r\n    <br/>\r\n    <p [ngStyle]=\"{color:'red', textAlign: 'center'}\"> {{ errorMessage }} </p>\r\n    <br/>\r\n    <button class=\"btn login\" type=\"submit\">Submit</button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register-page',\r\n  templateUrl: './register-page.component.html',\r\n  styleUrls: ['./register-page.component.css']\r\n})\r\nexport class RegisterPageComponent implements OnInit {\r\n  errorMessage: string = '';\r\n  credentials: any = {\r\n    email: '',\r\n    pwd: '',\r\n    fullName: '',\r\n    city: '',\r\n    profession: '',\r\n  }\r\n  returnURL: string;\r\n  constructor(private auth: AuthService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.returnURL = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  register() {\r\n    if (this.credentials.fullName === \"\" || this.credentials.email === \"\" || this.credentials.pwd === \"\" || this.credentials.profession ===\"\" || this.credentials.city === \"\") {\r\n      this.initCredentialsToNull();\r\n      this.errorMessage = \"One Field or More is Empty!\";\r\n    }\r\n    else if (!this.credentials.email.includes('@')) {\r\n      this.initCredentialsToNull();\r\n      this.errorMessage = \"Invalid Email\";\r\n    }\r\n    else {\r\n      this.auth.register(this.credentials.email, this.credentials.pwd, this.credentials.fullName, this.credentials.city, this.credentials.profession).subscribe(data => {\r\n        if (data['message'] === false) {\r\n          // if invalid login, reset the form\r\n          this.initCredentialsToNull();\r\n          this.errorMessage = \"User Already Exists!\";\r\n        } else {\r\n          // if we get here, there is no error, the return is valid\r\n          // Let's first save the info into local storage for later use. We can parse this back\r\n          // into an object later\r\n          localStorage.setItem('currentUsr', JSON.stringify(data));\r\n          // route user to the return URL\r\n          this.router.navigateByUrl(this.returnURL);\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  initCredentialsToNull() {\r\n    this.credentials.email = '';\r\n    this.credentials.pwd = '';\r\n    this.credentials.fullName = '';\r\n    this.credentials.city = '';\r\n    this.credentials.profession = '';\r\n  }\r\n}\r\n","<div class=\"form-container\">\r\n  <form name=\"form\" class=\"registrationForm\" (ngSubmit)=\"register()\" #f=\"ngForm\" novalidate>\r\n    <div class=\"form-group\">\r\n      <h2>User Registration</h2>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Email</label>\r\n      <input class=\"form-control\" type=\"email\" name=\"email\" [(ngModel)]=\"credentials.email\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Full Name</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"fullName\" [(ngModel)]=\"credentials.fullName\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"credentials.city\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Profession</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"profession\" [(ngModel)]=\"credentials.profession\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input class=\"form-control\" type=\"password\" name=\"pwd\" [(ngModel)]=\"credentials.pwd\" required>\r\n    </div>\r\n    <br/>\r\n    <p [ngStyle]=\"{color:'red', textAlign:'center'}\"> {{ errorMessage }} </p>\r\n    <br/>\r\n    <button class=\"btn register\" type=\"submit\">Submit</button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from \"../../services/auth.service\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ForumService} from \"../../services/forum.service\";\r\nimport { PostsService } from \"../../services/posts.service\";\r\nimport { MeetPlaceService } from \"../../services/meet-place.service\";\r\n\r\n@Component({\r\n  selector: 'app-posts-create',\r\n  templateUrl: './posts-create.component.html',\r\n  styleUrls: ['./posts-create.component.css']\r\n})\r\nexport class PostsCreateComponent implements OnInit {\r\n  post: any = {\r\n    postTitle: '',\r\n    postId: '',\r\n    postSubject: '',\r\n    forumId: '',\r\n    forumName: '',\r\n    postLocation: '',\r\n    postParticipants: new Array<string>(),\r\n  };\r\n  withSuggestion: boolean;\r\n  returnURL: string;\r\n  constructor(public auth: AuthService, public forumSer: ForumService, public meetPlaceSer: MeetPlaceService,\r\n              public postsSer: PostsService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.returnURL = this.route.snapshot.queryParams['returnUrl'] || '/posts';\r\n    this.post.forumName = this.forumSer.getActiveForum()['forumName'];\r\n    this.post.forumId = this.forumSer.getActiveForum()['forumId'];\r\n    this.post.postParticipants.push(this.auth.getUserEmail());\r\n    this.withSuggestion = false;\r\n\r\n    this.initPostLocationSelect();\r\n\r\n    this.postsSer.getAllPosts().subscribe(posts=> {\r\n      var currentUser = this.auth.getUserEmail();\r\n      var favoriteLocations = Array<string>();\r\n      var favoriteLocationsCountPerUser = Array<number>();\r\n\r\n      posts.forEach(post=> {\r\n        var postParticipants = post.postParticipants;\r\n        postParticipants.forEach(participant=> {\r\n          if (participant === currentUser) {\r\n            //the location already exists in favoriteLocations array\r\n            var index = favoriteLocations.indexOf(post.postLocation);\r\n            if (index >= 0) {\r\n              favoriteLocationsCountPerUser[index]++;\r\n            }\r\n            //the location doesn't exist in favoriteLocations array\r\n            else {\r\n              favoriteLocations.push(post.postLocation);\r\n              favoriteLocationsCountPerUser.push(1);\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n      if (favoriteLocations.length > 0) {\r\n        var index = 0;\r\n        var max = favoriteLocationsCountPerUser[0];\r\n        for(var i=0; i<favoriteLocationsCountPerUser.length; i++) {\r\n          if (favoriteLocationsCountPerUser[i] > max) {\r\n            max = favoriteLocationsCountPerUser[i];\r\n            index = i;\r\n          }\r\n        }\r\n\r\n        this.post.postLocation = favoriteLocations[index];\r\n        this.withSuggestion = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  createPost() {\r\n    var select: HTMLSelectElement = <HTMLSelectElement> document.getElementById(\"selectPostLocation\");\r\n    this.post.postLocation = select.options[select.selectedIndex].value;\r\n    this.postsSer.createPost(this.post.postTitle, this.post.postSubject, this.post.forumId, this.post.forumName,\r\n      this.post.postLocation, this.post.postParticipants).subscribe(data => {\r\n        if (data['message'] === false) {\r\n          // if invalid login, reset the form\r\n          this.post.postTitle = '';\r\n          this.post.postId = '';\r\n          this.post.postLocation = '';\r\n          this.post.postParticipants = '';\r\n          this.post.postSubject = '';\r\n        } else {\r\n          // if we get here, there is no error, the return is valid\r\n          // Let's first save the info into local storage for later use. We can parse this back\r\n          // into an object later\r\n          localStorage.setItem('currentPost', JSON.stringify(data));\r\n          // route user to the return URL\r\n          this.router.navigateByUrl(this.returnURL);\r\n        }\r\n      });\r\n\r\n    this.postsSer.sendPostToFacebook(this.post.postTitle, this.post.postSubject, this.post.forumName, this.post.postLocation).subscribe(data=> {\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  initPostLocationSelect() {\r\n    this.meetPlaceSer.getAllMeetPlaces().subscribe(data=> {\r\n      data.forEach(meetPlace => {\r\n        var meetPlaceName = meetPlace.meetPlaceName;\r\n        var meetPlaceLocation = meetPlace.meetPlaceLocation;\r\n        var newOption = meetPlaceName + \" (\" + meetPlaceLocation + \")\";\r\n\r\n        var select: HTMLSelectElement = <HTMLSelectElement> document.getElementById(\"selectPostLocation\");\r\n        select.options.add(new Option(newOption, meetPlaceName));\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"form-container\" *ngIf=\"auth.isLoggedIn()\">\r\n  <form name=\"form\" class=\"loginForm\" (ngSubmit)=\"f.form.valid && createPost()\" #f=\"ngForm\" novalidate>\r\n    <div class=\"form-group\">\r\n      <h2>New Post</h2>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Post Title</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"postTitle\" [(ngModel)]=\"post.postTitle\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Post Subject</label>\r\n      <textarea cols=\"40\" rows=\"5\" name=\"postSubject\" required [(ngModel)]=\"post.postSubject\"></textarea>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Forum Name</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"forumName\" [(ngModel)]=\"post.forumName\" required disabled>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Forum Id</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"forumId\" [(ngModel)]=\"post.forumId\" required disabled>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Post Location</label>\r\n      <label *ngIf=\"withSuggestion\" [ngStyle]=\"{color:'red'}\"> With Suggestion! </label>\r\n      <select class=\"form-control\" id=\"selectPostLocation\" name=\"postLocation\" [(ngModel)]=\"post.postLocation\">\r\n      </select>\r\n    </div>\r\n    <br/>\r\n    <button class=\"btn login\" type=\"submit\">Submit</button>\r\n  </form>\r\n</div>\r\n<div *ngIf=\"!auth.isLoggedIn()\">\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> Not Logged In! </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from \"../../services/auth.service\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PostsService } from \"../../services/posts.service\";\r\nimport {ForumService} from \"../../services/forum.service\";\r\nimport { MeetPlaceService} from \"../../services/meet-place.service\";\r\n\r\n@Component({\r\n  selector: 'app-posts-update',\r\n  templateUrl: './posts-update.component.html',\r\n  styleUrls: ['./posts-update.component.css']\r\n})\r\nexport class PostsUpdateComponent implements OnInit {\r\n  post: any = {\r\n    postTitle: '',\r\n    postSubject: '',\r\n    postId: '',\r\n    forumName:'',\r\n    forumId: '',\r\n    postLocation:'',\r\n    postParticipants: new Array<string>()\r\n  };\r\n  returnURL: string;\r\n  constructor(public auth: AuthService, public postSer: PostsService, private router: Router, private route: ActivatedRoute, private meetPlaceSer: MeetPlaceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.returnURL = this.route.snapshot.queryParams['returnUrl'] || '/posts';\r\n    this.post = this.postSer.getActivePost();\r\n    this.initPostLocationSelect();\r\n  }\r\n\r\n  EditPost() {\r\n    var select: HTMLSelectElement = <HTMLSelectElement> document.getElementById(\"selectPostLocation\");\r\n    this.post.postLocation = select.options[select.selectedIndex].value;\r\n    this.postSer.editPost(this.post.postTitle, this.post.postSubject, this.post.postId, this.post.forumId, this.post.forumName,\r\n      this.post.postLocation, this.post.postParticipants).subscribe(data=> {\r\n      if (data['message'] === false) {\r\n        // if invalid login, reset the form\r\n        this.post.postTitle = '';\r\n        this.post.postSubject = '';\r\n        this.post.postLocation = '';\r\n        this.postSer.deactivatePost();\r\n      }\r\n      else {\r\n        this.postSer.deactivatePost();\r\n        this.router.navigateByUrl(this.returnURL);\r\n      }\r\n    });\r\n  }\r\n\r\n  initPostLocationSelect() {\r\n    this.meetPlaceSer.getAllMeetPlaces().subscribe(data => {\r\n      data.forEach(meetPlace => {\r\n        var meetPlaceName = meetPlace.meetPlaceName;\r\n        var meetPlaceLocation = meetPlace.meetPlaceLocation;\r\n        var newOption = meetPlaceName + \" (\" + meetPlaceLocation + \")\";\r\n\r\n        var select: HTMLSelectElement = <HTMLSelectElement>document.getElementById(\"selectPostLocation\");\r\n        select.options.add(new Option(newOption, meetPlaceName));\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"form-container\" *ngIf=\"auth.isLoggedIn()\">\r\n  <form name=\"form\" class=\"loginForm\" (ngSubmit)=\"f.form.valid && EditPost()\" #f=\"ngForm\" novalidate>\r\n    <div class=\"form-group\">\r\n      <h2>Edit Forum</h2>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Post Title</label>\r\n      <input class=\"form-control\" type=\"text\" name=\"postTitle\" [(ngModel)]=\"post.postTitle\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Post Subject</label>\r\n      <textarea cols=\"40\" rows=\"5\" name=\"postSubject\" required [(ngModel)]=\"post.postSubject\"></textarea>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Post Location</label>\r\n      <select class=\"form-control\" id=\"selectPostLocation\" [(ngModel)]=\"post.postLocation\">\r\n      </select>\r\n    </div>\r\n    <br/>\r\n    <button class=\"btn login\" type=\"submit\">Submit</button> <br/>\r\n    <button class=\"btn login\" routerLink=\"/posts\">Cancel</button>\r\n  </form>\r\n</div>\r\n<div *ngIf=\"!auth.isLoggedIn()\">\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> Not Logged In! </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from '../services/auth.service';\r\nimport {PostsService} from \"../services/posts.service\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-posts',\r\n  templateUrl: './posts.component.html',\r\n  styleUrls: ['./posts.component.css']\r\n})\r\n\r\nexport class PostsComponent implements OnInit {\r\n  post: any = {\r\n    postId: '',\r\n    postTitle: '',\r\n    postLocation: '',\r\n    forumName: '',\r\n  };\r\n  numOfRows: number;\r\n  returnURL: string;\r\n  isCurrentForumExists: boolean;\r\n  showSearchForm: boolean;\r\n  currentForumName: string;\r\n  errorMessage:string = '';\r\n  self;\r\n\r\n  constructor(public auth: AuthService, public postSer: PostsService, private router: Router, private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.self = this;\r\n    this.showSearchForm = false;\r\n    this.numOfRows = 1;\r\n    this.returnURL = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n    if (localStorage['currentForum']) {\r\n      this.isCurrentForumExists = true;\r\n      var forumName = JSON.parse(localStorage['currentForum'])['forumName'];\r\n      this.currentForumName = forumName;\r\n      this.post.forumName = forumName;\r\n    }\r\n    else {\r\n      this.isCurrentForumExists = false;\r\n      this.router.navigate(['/forums']);\r\n    }\r\n\r\n    this.drawTable();\r\n  }\r\n\r\n  searchPost() {\r\n    if (this.post.postTitle === '' && this.post.postId === '' && this.post.postLocation === '') {\r\n      this.errorMessage = \"All Rows are Empty\"!\r\n    }\r\n    else {\r\n      this.postSer.searchPost(this.post.postTitle, this.post.postId, this.post.postLocation, this.post.forumName).subscribe(data=>{\r\n        this.deleteTable();\r\n        this.errorMessage = '';\r\n        data.forEach(post=> {\r\n          this.addRow(post.postTitle, post.postSubject, post.postId, post.forumName, post.postLocation, post.postParticipants);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  showSearchFormFunc() {\r\n    this.showSearchForm = !this.showSearchForm;\r\n    if (this.showSearchForm === false) {\r\n      this.errorMessage = \"\";\r\n    }\r\n  }\r\n\r\n  cancelSearch() {\r\n    this.showSearchForm = false;\r\n    this.errorMessage = \"\";\r\n    this.deleteTable();\r\n    this.drawTable();\r\n  }\r\n\r\n  drawTable() {\r\n    var forumId = JSON.parse(localStorage['currentForum'])['forumId'];\r\n    this.postSer.getAllPostsByForumId(forumId).subscribe(data=> {\r\n      data.forEach(post => {\r\n        this.addRow(post.postTitle, post.postSubject, post.postId, post.forumName, post.postLocation, post.postParticipants);\r\n        var currentRow = this.numOfRows;\r\n        var router = this.router;\r\n        var postSer = this.postSer;\r\n        var turnStringToArrayAndAddUser = this.turnStringToArrayAndAddUser;\r\n        var authSer = this.auth;\r\n        var that = this;\r\n\r\n        document.getElementById('editBtn_' + currentRow).addEventListener('click', function() {\r\n          var table: HTMLTableElement = <HTMLTableElement> document.getElementById(\"myPostsTable\");\r\n          var rows = table.rows;\r\n\r\n          var postTitle = rows[currentRow].cells[0].innerText;\r\n          console.log(postTitle);\r\n\r\n          var postSubject = rows[currentRow].cells[1].innerText;\r\n          console.log(postSubject);\r\n\r\n          var postId = rows[currentRow].cells[2].innerText;\r\n          console.log(postId);\r\n\r\n          var forumName = rows[currentRow].cells[3].innerText;\r\n          console.log(forumName);\r\n\r\n          var postLocation = rows[currentRow].cells[4].innerText;\r\n          console.log(postLocation);\r\n\r\n          var postParticipantsAsString = rows[currentRow].cells[5].innerText;\r\n          var postParticipants = turnStringToArrayAndAddUser(postParticipantsAsString, \"\");\r\n          console.log(postParticipants);\r\n\r\n          var activePost = {\r\n            postTitle: postTitle,\r\n            postSubject: postSubject,\r\n            postId: postId,\r\n            forumName:forumName,\r\n            forumId: forumId,\r\n            postLocation:postLocation,\r\n            postParticipants: postParticipants\r\n          };\r\n\r\n          console.log(activePost);\r\n          postSer.setActivePost(activePost);\r\n          router.navigate(['/posts/update']);\r\n        });\r\n\r\n        document.getElementById('joinBtn_' + currentRow).addEventListener('click', function() {\r\n          var table: HTMLTableElement = <HTMLTableElement> document.getElementById(\"myPostsTable\");\r\n          var rows = table.rows;\r\n\r\n          var postId = rows[currentRow].cells[2].innerText;\r\n          console.log(postId);\r\n\r\n          var newUser = authSer.getUserEmail();\r\n\r\n          postSer.getPostById(postId).subscribe(data=> {\r\n            var participants: Array<string> = data.postParticipants;\r\n            if (participants.indexOf(newUser) === -1) {\r\n              data.postParticipants.push(newUser);\r\n              postSer.editPost(data.postTitle, data.postSubject, data.postId, data.forumId, data.forumName, data.postLocation, data.postParticipants).subscribe(data=> {\r\n                postSer.setActivePost(data);\r\n                rows[currentRow].cells[5].innerText = data.postParticipants.join(\"\\n\");\r\n              });\r\n            }\r\n          });\r\n        });\r\n\r\n        document.getElementById('deleteBtn_' + currentRow).addEventListener('click', function() {\r\n          var table: HTMLTableElement = <HTMLTableElement> document.getElementById(\"myPostsTable\");\r\n          var rows = table.rows;\r\n\r\n          var postId = rows[currentRow].cells[2].innerText;\r\n          console.log(postId);\r\n\r\n          postSer.deletePost(postId).subscribe(data=> {\r\n            that.deleteTable();\r\n            that.drawTable();\r\n          });\r\n        });\r\n\r\n        this.numOfRows += 1;\r\n      });\r\n    });\r\n  }\r\n\r\n  turnStringToArrayAndAddUser(postParticipantsAsString:string, newUser: string) {\r\n    var array = new Array<string>();\r\n    if (newUser === \"\") {\r\n      console.log(\"split: \" + postParticipantsAsString.split(\",\"));\r\n      return postParticipantsAsString.split(\",\");\r\n    }\r\n    else {\r\n      array = postParticipantsAsString.split(\",\");\r\n      array.push(newUser);\r\n    }\r\n  }\r\n\r\n  addRow(postTitle, postSubject, postId, forumName, postLocation, postParticipants: Array<string>) {\r\n    var table: HTMLTableElement = <HTMLTableElement> document.getElementById(\"myPostsTable\");\r\n    var newRow = table.insertRow(this.numOfRows);\r\n\r\n    var newCell_0 = newRow.insertCell(0);\r\n    var newCell_1 = newRow.insertCell(1);\r\n    var newCell_2 = newRow.insertCell(2);\r\n    var newCell_3 = newRow.insertCell(3);\r\n    var newCell_4 = newRow.insertCell(4);\r\n    var newCell_5 = newRow.insertCell(5);\r\n    var newCell_6 = newRow.insertCell(6);\r\n\r\n    newCell_0.innerText = postTitle;\r\n    newCell_1.innerText = postSubject;\r\n    newCell_2.innerText = postId;\r\n    newCell_3.innerText = forumName;\r\n    newCell_4.innerText = postLocation;\r\n    newCell_5.innerText = postParticipants.join(\"\\n\");\r\n\r\n    var editBtnId = 'editBtn_' + this.numOfRows;\r\n    var joinBtnId = 'joinBtn_' + this.numOfRows;\r\n    var deleteBtnId = 'deleteBtn_' + this.numOfRows;\r\n\r\n    var isEnabled = this.auth.isUserAdmin();\r\n\r\n    if (isEnabled) {\r\n      var newCell_innerHtml = \"<button class='btn btn-primary' id=\" + editBtnId + \"> Edit Post </button> </br>\" +\r\n        \"<button class='btn btn-primary' id=\" + joinBtnId + \"> Join Meeting! </button>\" +\r\n        \"<button class='btn btn-primary' id=\" + deleteBtnId + \"> Delete Post </button>\";\r\n    }\r\n    else {\r\n      var newCell_innerHtml = \"<button class='btn btn-primary' id=\" + editBtnId + \" disabled> Edit Post </button> </br>\" +\r\n        \"<button class='btn btn-primary' id=\" + joinBtnId + \"> Join Meeting! </button>\" +\r\n        \"<button class='btn btn-primary' id=\" + deleteBtnId + \" disabled> Delete Post </button>\";\r\n    }\r\n\r\n    newCell_6.innerHTML = newCell_innerHtml;\r\n  }\r\n\r\n  deleteTable() {\r\n    var table: HTMLTableElement = <HTMLTableElement> document.getElementById(\"myPostsTable\");\r\n    while(table.rows.length > 1) {\r\n      table.deleteRow(-1);\r\n    }\r\n    this.numOfRows = 1;\r\n  }\r\n}\r\n","<div class=\"myTable rounded-lg\"  [ngStyle]=\"{textAlign: 'center'}\" *ngIf=\"auth.isLoggedIn()\">\r\n  <div class=\"display-3\"> Current Forum: {{currentForumName}} </div>\r\n  <br/><br/>\r\n  <button class=\"btn btn-primary\" id=\"createPostBtn\" routerLink=\"/posts/create\"> New Post </button>\r\n  <br/><br/>\r\n  <button class=\"btn btn-primary\" id=\"returnToForumsBtn\" routerLink=\"/forums\"> Back to Forums </button>\r\n  <br/><br/>\r\n  <button class=\"btn btn-primary\" id=\"openSearchPostBtn\" (click)=\"showSearchFormFunc()\"> Search Posts </button>\r\n  <br/><br/>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4 offset-sm-4\">\r\n      <div id=\"searchForm\" *ngIf=\"showSearchForm\" [ngStyle]=\"{textAlign: 'center', width: '350px'}\">\r\n        <form name=\"form\" class=\"loginForm\" (ngSubmit)=\"searchPost()\" #f=\"ngForm\" novalidate>\r\n          <div class=\"form-group\">\r\n            <label>Post Title</label>\r\n            <input class=\"form-control\" type=\"text\" name=\"postTitle\" [(ngModel)]=\"post.postTitle\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Post Id</label>\r\n            <input class=\"form-control\" type=\"text\" name=\"postId\" [(ngModel)]=\"post.postId\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Post Location</label>\r\n            <input class=\"form-control\" type=\"text\" name=\"postLocation\" [(ngModel)]=\"post.postLocation\" required>\r\n          </div>\r\n          <br/>\r\n          <p [ngStyle]=\"{color: 'red'}\"> {{errorMessage}}</p>\r\n          <button class=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form>\r\n        <button class=\"btn btn-primary\" (click)=\"cancelSearch()\">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <br/><br/>\r\n\r\n  <table class=\"table table-hover shadow-lg rounded-lg\" id=\"myPostsTable\">\r\n    <thead class=\"thead-dark\">\r\n    <tr>\r\n      <th class=\"width-sm\">\r\n        Post Title\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        Post Subject\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        Post Id\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        Forum Name\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        Post Location\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        Post Participants\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        Actions\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody id=\"myTablePostsD\">\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<div *ngIf=\"!auth.isLoggedIn()\">\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> Not Logged In! </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nclass Users {\r\n  fullName: string;\r\n  email: string;\r\n  city: string;\r\n  profession: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  login(email: string, pwd: string) {\r\n    return this.http.post('/api/users/login', {\r\n      email: email,\r\n      password: pwd\r\n    });\r\n  }\r\n  register(email:string, pwd:string, fullName:string, city:string, profession:string) {\r\n    return this.http.post('/api/users', {\r\n      email: email,\r\n      password: pwd,\r\n      fullName: fullName,\r\n      city:city,\r\n      profession: profession\r\n    });\r\n  }\r\n\r\n  deleteUser(userEmail: string, password: string) {\r\n    this.http.post('http://localhost:3000/api/users/deleteUser', {\r\n      email: userEmail,\r\n      password: password\r\n    });\r\n    this.logout();\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return !!localStorage['currentUsr'];\r\n  }\r\n  logout() {\r\n    localStorage['currentUsr'] = '';\r\n  }\r\n  getUserEmail() {\r\n    if (localStorage['currentUsr']) {\r\n      return JSON.parse(localStorage['currentUsr'])['email'];\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getUserFullName() {\r\n    if (localStorage['currentUsr']) {\r\n      return JSON.parse(localStorage['currentUsr'])['fullName'];\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getUserCity() {\r\n    if (localStorage['currentUsr']) {\r\n      return JSON.parse(localStorage['currentUsr'])['city'];\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n  getUserProfession() {\r\n    if (localStorage['currentUsr']) {\r\n      return JSON.parse(localStorage['currentUsr'])['profession'];\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getAllUsers() {\r\n    return this.http.get<Users[]>('http://localhost:3000/api/users');\r\n  }\r\n\r\n  isUserAdmin() {\r\n    if (this.isLoggedIn())\r\n      return JSON.parse(localStorage['currentUsr'])['role'] === \"admin\";\r\n    else return false;\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nclass Forum {\r\n  forumName: string;\r\n  forumId: string;\r\n  numTimesWatched: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ForumService {\r\n  constructor(private http: HttpClient) {\r\n  }\r\n  createForum(forumName: string) {\r\n    return this.http.post('http://localhost:3000/api/forums', {\r\n      forumName: forumName,\r\n      forumId: this.generateId(),\r\n      numTimesWatched: 0,\r\n    });\r\n  }\r\n\r\n  editForum(forumName:string, forumId:string) {\r\n    return this.http.post('http://localhost:3000/api/forums/' + forumId, {\r\n      forumId: forumId,\r\n      forumName: forumName,\r\n    });\r\n  }\r\n\r\n  incNumTimesWatched(forumId:string, forumName: string) {\r\n    return this.http.post('http://localhost:3000/api/forums/incNumTimesWatched', {\r\n      forumId: forumId,\r\n      forumName: forumName\r\n    });\r\n  }\r\n\r\n  getAllForums() {\r\n    return this.http.get<Forum[]>('http://localhost:3000/api/forums');\r\n  }\r\n\r\n  getForumById(forumId: string) {\r\n    return this.http.get<Forum>('http://localhost:3000/api/forums/' + forumId)\r\n  }\r\n\r\n  generateId() {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n  }\r\n\r\n  setActiveForum(forum: Forum) {\r\n    localStorage.setItem('currentForum', JSON.stringify(forum));\r\n  }\r\n\r\n  deactivateForum() {\r\n   localStorage['currentForum'] = '';\r\n  }\r\n\r\n  getActiveForum() {\r\n    return JSON.parse(localStorage['currentForum']);\r\n  }\r\n }\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nclass MeetPlace {\r\n  meetPlaceName: string;\r\n  meetPlaceType: string;\r\n  meetPlaceLocation: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MeetPlaceService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createMeetPlace(meetPlaceName: string, meetPlaceType: string, meetPlaceLocation: string) {\r\n    return this.http.post('http://localhost:3000/api/meetPlaces', {\r\n      meetPlaceName: meetPlaceName,\r\n      meetPlaceType: meetPlaceType,\r\n      meetPlaceLocation: meetPlaceLocation,\r\n    });\r\n  }\r\n\r\n  editMeetPlace(meetPlaceName: string, meetPlaceType: string, meetPlaceLocation: string) {\r\n    return this.http.post('http://localhost:3000/api/meetPlaces/' + meetPlaceName, {\r\n      meetPlaceName: meetPlaceName,\r\n      meetPlaceType: meetPlaceType,\r\n      meetPlaceLocation: meetPlaceLocation,\r\n    });\r\n  }\r\n\r\n  getAllMeetPlaces() {\r\n    return this.http.get<MeetPlace[]>('http://localhost:3000/api/meetPlaces');\r\n  }\r\n\r\n  getMeetPlaceByName(meetPlaceName: string) {\r\n    return this.http.get<MeetPlace>('http://localhost:3000/api/meetPlaces/' + meetPlaceName);\r\n  }\r\n\r\n  setActiveMeetPlace(meetPlace: MeetPlace) {\r\n    localStorage.setItem('currentMeetPlace', JSON.stringify(meetPlace));\r\n  }\r\n\r\n  deactivateMeetPlace() {\r\n    localStorage['currentMeetPlace'] = '';\r\n  }\r\n\r\n  getActiveMeetPlace() {\r\n    return JSON.parse(localStorage['currentMeetPlace']);\r\n  }\r\n\r\n  searchMeetPlace(meetPlaceName: string, meetPlaceType: string, meetPlaceLocation: string) {\r\n    var query = {};\r\n    if (meetPlaceName != '' && meetPlaceType != '' && meetPlaceLocation != '') {\r\n      query = {\r\n        meetPlaceName: meetPlaceName,\r\n        meetPlaceType: meetPlaceType,\r\n        meetPlaceLocation: meetPlaceLocation,\r\n      }\r\n    }\r\n    else if (meetPlaceName != '' && meetPlaceType != '') {\r\n      query = {\r\n        meetPlaceName: meetPlaceName,\r\n        meetPlaceType: meetPlaceType,\r\n      }\r\n    }\r\n    else if (meetPlaceName != '' && meetPlaceLocation != '') {\r\n      query = {\r\n        meetPlaceName: meetPlaceName,\r\n        meetPlaceLocation: meetPlaceLocation,\r\n      }\r\n    }\r\n    else if (meetPlaceType != '' && meetPlaceLocation != '') {\r\n      query = {\r\n        meetPlaceType: meetPlaceType,\r\n        meetPlaceLocation: meetPlaceLocation,\r\n      }\r\n    }\r\n    else if (meetPlaceType != '') {\r\n      query = {\r\n        meetPlaceType: meetPlaceType,\r\n      }\r\n    }\r\n    else if (meetPlaceLocation != '') {\r\n      query = {\r\n        meetPlaceLocation: meetPlaceLocation,\r\n      }\r\n    }\r\n    else if (meetPlaceName != '') {\r\n      query = {\r\n        meetPlaceName: meetPlaceName,\r\n      }\r\n    }\r\n\r\n    return this.http.post<MeetPlace[]>('http://localhost:3000/api/meetPlaces/searchMeetPlace', query);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nclass Post {\r\n  postTitle: string;\r\n  postSubject: string;\r\n  postId: string;\r\n  forumId: string;\r\n  forumName: string;\r\n  postLocation: string;\r\n  postParticipants: Array<string>;\r\n}\r\n\r\nclass NumOfPosts {\r\n  _id: string;\r\n  numOfPosts: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PostsService {\r\n  facebookPageAccessToken = \"EAACwl16xoDsBACXRmYIcIYmmySAViHTtwaGquIYcVZC9m8Nte8pVywcwbsXCEZBB8shZCZCPFHJ6ZCsZAFlxI6rRNNCEuCc4CIerZCb7rGimS46BFqMRRbf8VADjHj2AlFo48istZAOBDaTvAcBz4f4hvqy1ZCokYax9GsrfVVpGOZAX5u5DEYDU6Y\";\r\n  facebookPageId = \"102130368083020\";\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  createPost(postTitle: string, postSubject: string, forumId: string, forumName:string, postLocation: string, postParticipants:Array<string>) {\r\n    return this.http.post('http://localhost:3000/api/posts', {\r\n      postTitle: postTitle,\r\n      postSubject: postSubject,\r\n      postLocation: postLocation,\r\n      postId: this.generateId(),\r\n      forumId: forumId,\r\n      forumName: forumName,\r\n      postParticipants: postParticipants\r\n    });\r\n  }\r\n\r\n  sendPostToFacebook(postTitle: string, postSubject: string, forumName:string, postLocation: string) {\r\n    var url = \"https://graph.facebook.com/\" + this.facebookPageId + \"/feed?access_token=\" + this.facebookPageAccessToken;\r\n    var newPostString = \"A new post has been created! | \" +\r\n                        \"Post Title: \" + postTitle + \" | \" +\r\n                        \"Post Subject: \" + postSubject + \" | \"+\r\n                        \"Forum Name: \" + forumName + \" | \"+\r\n                        \"Post Location: \" + postLocation;\r\n    return this.http.post(url, {\r\n      message : newPostString\r\n    });\r\n  }\r\n\r\n  editPost(postTitle: string, postSubject: string, postId: string, forumId: string, forumName:string, postLocation: string, postParticipants:Array<string>) {\r\n    return this.http.post<Post>('http://localhost:3000/api/posts/' + postId, {\r\n      postId: postId,\r\n      postTitle: postTitle,\r\n      postSubject: postSubject,\r\n      forumId: forumId,\r\n      forumName: forumName,\r\n      postLocation: postLocation,\r\n      postParticipants: postParticipants\r\n    });\r\n  }\r\n\r\n  getAllPostsByForumId(forumId: string) {\r\n    return this.http.post<Post[]>('http://localhost:3000/api/posts/forums', {\r\n      forumId: forumId\r\n    });\r\n  }\r\n\r\n\r\n  getAllPosts() {\r\n    return this.http.get<Post[]>('http://localhost:3000/api/posts');\r\n  }\r\n\r\n  getPostById(postId: string) {\r\n      return this.http.post<Post>('http://localhost:3000/api/posts/postId', {\r\n        postId: postId\r\n      });\r\n  }\r\n\r\n  generateId() {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n  }\r\n\r\n  setActivePost(post: Post) {\r\n    console.log(\"Setting currentPost: \" + JSON.stringify(post));\r\n    localStorage.setItem('currentPost', JSON.stringify(post));\r\n  }\r\n\r\n  deactivatePost() {\r\n    localStorage['currentPost'] = '';\r\n  }\r\n\r\n  getActivePost() {\r\n    return JSON.parse(localStorage['currentPost']);\r\n  }\r\n\r\n  deletePost(postId: string) {\r\n    return this.http.post('http://localhost:3000/api/posts/postDelete', {\r\n      postId: postId\r\n    });\r\n  }\r\n\r\n  groupByForumIdAndCount() {\r\n    return this.http.get<NumOfPosts[]>('http://localhost:3000/api/posts/postsGroupBy');\r\n  }\r\n\r\n  groupByForumNameAndCount() {\r\n    return this.http.get<NumOfPosts[]>('http://localhost:3000/api/posts/postsGroupByForumName');\r\n  }\r\n\r\n  groupByPostLocationAndCount() {\r\n    return this.http.get<NumOfPosts[]>('http://localhost:3000/api/posts/postsGroupByPostLocation');\r\n  }\r\n\r\n  searchPost(postTitle: string, postId: string, postLocation: string, forumName: string) {\r\n    var query = {};\r\n    if (postTitle != '' && postId != '' && postLocation != '') {\r\n      query = {\r\n        postId: postId,\r\n        postTitle: postTitle,\r\n        postLocation: postLocation,\r\n        forumName: forumName\r\n      }\r\n    }\r\n    else if (postTitle != '' && postId != '') {\r\n      query = {\r\n        postId: postId,\r\n        postTitle: postTitle,\r\n        forumName: forumName\r\n      }\r\n    }\r\n    else if (postTitle != '' && postLocation != '') {\r\n      query = {\r\n        postTitle: postTitle,\r\n        postLocation: postLocation,\r\n        forumName: forumName\r\n      }\r\n    }\r\n    else if (postLocation != '' && postId != '') {\r\n      query = {\r\n        postId: postId,\r\n        postLocation: postLocation,\r\n        forumName: forumName\r\n      }\r\n    }\r\n    else if (postLocation != '') {\r\n      query = {\r\n        postLocation: postLocation,\r\n        forumName: forumName\r\n      }\r\n    }\r\n    else if (postTitle != '') {\r\n      query = {\r\n        postTitle: postTitle,\r\n        forumName: forumName\r\n      }\r\n    }\r\n    else if (postId != '') {\r\n      query = {\r\n        postId: postId,\r\n        forumName: forumName\r\n      }\r\n    }\r\n\r\n    return this.http.post<Post[]>('http://localhost:3000/api/posts/postsSearch', query);\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {PostsService} from \"../../services/posts.service\";\n\n@Component({\n  selector: 'app-discrete-bar-chart',\n  templateUrl: './discrete-bar-chart.component.html',\n  styleUrls: ['./discrete-bar-chart.component.css']\n})\nexport class DiscreteBarChartComponent implements OnInit {\n  options: any;\n  data: any = [\n    {\n      key: \"Cumulative Return\",\n      //{label, value}\n      values: []\n    }\n  ];\n  isDataLoaded: boolean;\n  constructor(postSer: PostsService) {\n    this.isDataLoaded = false;\n    this.options = {\n      chart: {\n        type: 'discreteBarChart',\n        height: 450,\n        margin : {\n          top: 20,\n          right: 20,\n          bottom: 50,\n          left: 55\n        },\n        x: function(d){return d.label;},\n        y: function(d){return d.value + (1e-10);},\n        showValues: true,\n        valueFormat: function(d){\n          return d3.format(',.4f')(d);\n        },\n        duration: 500,\n        xAxis: {\n          axisLabel: 'X Axis'\n        },\n        yAxis: {\n          axisLabel: 'Y Axis',\n          axisLabelDistance: -10\n        }\n      }\n    };\n\n    postSer.groupByPostLocationAndCount().subscribe(data=> {\n      var array: Array<any> = new Array<any>();\n      data.forEach(numOfPosts=> {\n        array.push({label: numOfPosts._id, value: numOfPosts.numOfPosts});\n      });\n      this.data[0].values = array;\n      console.log(this.data);\n      this.isDataLoaded = true;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<br/>\n<div class=\"display-4\" [ngStyle]=\"{textAlign: 'center'}\"> Num of Posts Per Meet Up Place: </div>\n<br/>\n<nvd3 [options]=\"options\" [data]=\"data\" *ngIf=\"isDataLoaded\"></nvd3>\n","import { Component, OnInit } from '@angular/core';\nimport {PostsService} from \"../../services/posts.service\";\n\nclass NumOfPosts {\n  _id: string;\n  numOfPosts: number;\n}\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css']\n})\nexport class PieChartComponent implements OnInit {\n  options: any;\n  data: any = [];\n  isDataLoaded: boolean;\n\n  constructor(postSer: PostsService) {\n    this.isDataLoaded = false;\n    this.options = {\n      chart: {\n        type: 'pieChart',\n        height: 500,\n        x: function (d) {\n          return d.key;\n        },\n        y: function (d) {\n          return d.y;\n        },\n        showLabels: true,\n        duration: 500,\n        labelThreshold: 0.01,\n        labelSunbeamLayout: true,\n        legend: {\n          margin: {\n            top: 5,\n            right: 35,\n            bottom: 5,\n            left: 0\n          }\n        }\n      }\n    };\n\n    this.data = new Array<any>();\n    postSer.groupByForumNameAndCount().subscribe(data=> {\n      data.forEach(numOfPosts=> {\n        console.log(numOfPosts);\n        console.log({key: numOfPosts._id, y: numOfPosts.numOfPosts });\n        this.data.push({key: numOfPosts._id, y: numOfPosts.numOfPosts });\n      });\n\n      this.isDataLoaded = true;\n    });\n    // this.data = [\n    //   {\n    //     key: \"Computer Science\",\n    //     y: 3\n    //   },\n    //   {\n    //     key: \"QA\",\n    //     y: 4\n    //   },\n    //   {\n    //     key: \"Accounting\",\n    //     y: 5\n    //   },\n    // ];\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<br/>\n<div class=\"display-4\" [ngStyle]=\"{textAlign: 'center'}\"> Num of Posts Per Forum: </div>\n<br/>\n<nvd3 [options]=\"options\" [data]=\"data\" *ngIf=\"isDataLoaded\"></nvd3>\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from \"../services/auth.service\";\r\nimport * as d3 from 'd3';\r\n\r\n@Component({\r\n  selector: 'app-statistics',\r\n  templateUrl: './statistics.component.html',\r\n  styleUrls: ['./statistics.component.css']\r\n})\r\nexport class StatisticsComponent implements OnInit {\r\n  constructor(public auth: AuthService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"auth.isLoggedIn()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-6\">\r\n      <app-pie-chart></app-pie-chart>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n      <app-discrete-bar-chart></app-discrete-bar-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"!auth.isLoggedIn()\">\r\n  <p>not logged in!</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from \"../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  usersArray: Array<string> = [];\r\n  constructor(public auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.auth.getAllUsers().subscribe(data => {\r\n      data.forEach(user => {\r\n        this.addRow(user.fullName,user.email,user.city,user.profession);\r\n      });\r\n    });\r\n  }\r\n\r\n  addRow(userName, userEmail, userCity, UserProfession) {\r\n    var table: HTMLTableElement = <HTMLTableElement> document.getElementById(\"myTable\");\r\n    var newRow = table.insertRow(-1);\r\n\r\n    var newCell_0 = newRow.insertCell(0);\r\n    var newCell_1 = newRow.insertCell(1);\r\n    var newCell_2 = newRow.insertCell(2);\r\n    var newCell_3 = newRow.insertCell(3);\r\n\r\n    newCell_0.innerText = userName;\r\n    newCell_1.innerText = userEmail;\r\n    newCell_2.innerText = userCity;\r\n    newCell_3.innerText = UserProfession;\r\n  }\r\n\r\n}\r\n","<div class=\"myTable rounded-lg\" *ngIf=\"auth.isLoggedIn()\">\r\n  <table class=\"table table-hover shadow-lg rounded-lg\" id=\"myTable\">\r\n    <thead class=\"thead-dark\">\r\n    <tr>\r\n      <th class=\"width-sm\">\r\n        Full Name\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        Email\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        City\r\n      </th>\r\n      <th class=\"width-sm\">\r\n        Profession\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody id=\"myTableD\">\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<div *ngIf=\"!auth.isLoggedIn()\">\r\n  <br/>\r\n  <div class=\"display-4\" [ngStyle]=\"{color:'red', textAlign:'center'}\"> Not Logged In! </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}